/*
 * 
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 20220523
 * Contact: blah@cliffano.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"log"
	"net/http"

	openapi "github.com/GIT_USER_ID/GIT_REPO_ID/go"
)

func main() {
	log.Printf("Server started")

	AbilityApiService := openapi.NewAbilityApiService()
	AbilityApiController := openapi.NewAbilityApiController(AbilityApiService)

	BerryApiService := openapi.NewBerryApiService()
	BerryApiController := openapi.NewBerryApiController(BerryApiService)

	BerryFirmnessApiService := openapi.NewBerryFirmnessApiService()
	BerryFirmnessApiController := openapi.NewBerryFirmnessApiController(BerryFirmnessApiService)

	BerryFlavorApiService := openapi.NewBerryFlavorApiService()
	BerryFlavorApiController := openapi.NewBerryFlavorApiController(BerryFlavorApiService)

	CharacteristicApiService := openapi.NewCharacteristicApiService()
	CharacteristicApiController := openapi.NewCharacteristicApiController(CharacteristicApiService)

	ContestEffectApiService := openapi.NewContestEffectApiService()
	ContestEffectApiController := openapi.NewContestEffectApiController(ContestEffectApiService)

	ContestTypeApiService := openapi.NewContestTypeApiService()
	ContestTypeApiController := openapi.NewContestTypeApiController(ContestTypeApiService)

	EggGroupApiService := openapi.NewEggGroupApiService()
	EggGroupApiController := openapi.NewEggGroupApiController(EggGroupApiService)

	EncounterConditionApiService := openapi.NewEncounterConditionApiService()
	EncounterConditionApiController := openapi.NewEncounterConditionApiController(EncounterConditionApiService)

	EncounterConditionValueApiService := openapi.NewEncounterConditionValueApiService()
	EncounterConditionValueApiController := openapi.NewEncounterConditionValueApiController(EncounterConditionValueApiService)

	EncounterMethodApiService := openapi.NewEncounterMethodApiService()
	EncounterMethodApiController := openapi.NewEncounterMethodApiController(EncounterMethodApiService)

	EvolutionChainApiService := openapi.NewEvolutionChainApiService()
	EvolutionChainApiController := openapi.NewEvolutionChainApiController(EvolutionChainApiService)

	EvolutionTriggerApiService := openapi.NewEvolutionTriggerApiService()
	EvolutionTriggerApiController := openapi.NewEvolutionTriggerApiController(EvolutionTriggerApiService)

	GenderApiService := openapi.NewGenderApiService()
	GenderApiController := openapi.NewGenderApiController(GenderApiService)

	GenerationApiService := openapi.NewGenerationApiService()
	GenerationApiController := openapi.NewGenerationApiController(GenerationApiService)

	GrowthRateApiService := openapi.NewGrowthRateApiService()
	GrowthRateApiController := openapi.NewGrowthRateApiController(GrowthRateApiService)

	ItemApiService := openapi.NewItemApiService()
	ItemApiController := openapi.NewItemApiController(ItemApiService)

	ItemAttributeApiService := openapi.NewItemAttributeApiService()
	ItemAttributeApiController := openapi.NewItemAttributeApiController(ItemAttributeApiService)

	ItemCategoryApiService := openapi.NewItemCategoryApiService()
	ItemCategoryApiController := openapi.NewItemCategoryApiController(ItemCategoryApiService)

	ItemFlingEffectApiService := openapi.NewItemFlingEffectApiService()
	ItemFlingEffectApiController := openapi.NewItemFlingEffectApiController(ItemFlingEffectApiService)

	ItemPocketApiService := openapi.NewItemPocketApiService()
	ItemPocketApiController := openapi.NewItemPocketApiController(ItemPocketApiService)

	LanguageApiService := openapi.NewLanguageApiService()
	LanguageApiController := openapi.NewLanguageApiController(LanguageApiService)

	LocationApiService := openapi.NewLocationApiService()
	LocationApiController := openapi.NewLocationApiController(LocationApiService)

	LocationAreaApiService := openapi.NewLocationAreaApiService()
	LocationAreaApiController := openapi.NewLocationAreaApiController(LocationAreaApiService)

	MachineApiService := openapi.NewMachineApiService()
	MachineApiController := openapi.NewMachineApiController(MachineApiService)

	MoveApiService := openapi.NewMoveApiService()
	MoveApiController := openapi.NewMoveApiController(MoveApiService)

	MoveAilmentApiService := openapi.NewMoveAilmentApiService()
	MoveAilmentApiController := openapi.NewMoveAilmentApiController(MoveAilmentApiService)

	MoveBattleStyleApiService := openapi.NewMoveBattleStyleApiService()
	MoveBattleStyleApiController := openapi.NewMoveBattleStyleApiController(MoveBattleStyleApiService)

	MoveCategoryApiService := openapi.NewMoveCategoryApiService()
	MoveCategoryApiController := openapi.NewMoveCategoryApiController(MoveCategoryApiService)

	MoveDamageClassApiService := openapi.NewMoveDamageClassApiService()
	MoveDamageClassApiController := openapi.NewMoveDamageClassApiController(MoveDamageClassApiService)

	MoveLearnMethodApiService := openapi.NewMoveLearnMethodApiService()
	MoveLearnMethodApiController := openapi.NewMoveLearnMethodApiController(MoveLearnMethodApiService)

	MoveTargetApiService := openapi.NewMoveTargetApiService()
	MoveTargetApiController := openapi.NewMoveTargetApiController(MoveTargetApiService)

	NatureApiService := openapi.NewNatureApiService()
	NatureApiController := openapi.NewNatureApiController(NatureApiService)

	PalParkAreaApiService := openapi.NewPalParkAreaApiService()
	PalParkAreaApiController := openapi.NewPalParkAreaApiController(PalParkAreaApiService)

	PokeathlonStatApiService := openapi.NewPokeathlonStatApiService()
	PokeathlonStatApiController := openapi.NewPokeathlonStatApiController(PokeathlonStatApiService)

	PokedexApiService := openapi.NewPokedexApiService()
	PokedexApiController := openapi.NewPokedexApiController(PokedexApiService)

	PokemonApiService := openapi.NewPokemonApiService()
	PokemonApiController := openapi.NewPokemonApiController(PokemonApiService)

	PokemonColorApiService := openapi.NewPokemonColorApiService()
	PokemonColorApiController := openapi.NewPokemonColorApiController(PokemonColorApiService)

	PokemonFormApiService := openapi.NewPokemonFormApiService()
	PokemonFormApiController := openapi.NewPokemonFormApiController(PokemonFormApiService)

	PokemonHabitatApiService := openapi.NewPokemonHabitatApiService()
	PokemonHabitatApiController := openapi.NewPokemonHabitatApiController(PokemonHabitatApiService)

	PokemonShapeApiService := openapi.NewPokemonShapeApiService()
	PokemonShapeApiController := openapi.NewPokemonShapeApiController(PokemonShapeApiService)

	PokemonSpeciesApiService := openapi.NewPokemonSpeciesApiService()
	PokemonSpeciesApiController := openapi.NewPokemonSpeciesApiController(PokemonSpeciesApiService)

	RegionApiService := openapi.NewRegionApiService()
	RegionApiController := openapi.NewRegionApiController(RegionApiService)

	StatApiService := openapi.NewStatApiService()
	StatApiController := openapi.NewStatApiController(StatApiService)

	SuperContestEffectApiService := openapi.NewSuperContestEffectApiService()
	SuperContestEffectApiController := openapi.NewSuperContestEffectApiController(SuperContestEffectApiService)

	TypeApiService := openapi.NewTypeApiService()
	TypeApiController := openapi.NewTypeApiController(TypeApiService)

	VersionApiService := openapi.NewVersionApiService()
	VersionApiController := openapi.NewVersionApiController(VersionApiService)

	VersionGroupApiService := openapi.NewVersionGroupApiService()
	VersionGroupApiController := openapi.NewVersionGroupApiController(VersionGroupApiService)

	router := openapi.NewRouter(AbilityApiController, BerryApiController, BerryFirmnessApiController, BerryFlavorApiController, CharacteristicApiController, ContestEffectApiController, ContestTypeApiController, EggGroupApiController, EncounterConditionApiController, EncounterConditionValueApiController, EncounterMethodApiController, EvolutionChainApiController, EvolutionTriggerApiController, GenderApiController, GenerationApiController, GrowthRateApiController, ItemApiController, ItemAttributeApiController, ItemCategoryApiController, ItemFlingEffectApiController, ItemPocketApiController, LanguageApiController, LocationApiController, LocationAreaApiController, MachineApiController, MoveApiController, MoveAilmentApiController, MoveBattleStyleApiController, MoveCategoryApiController, MoveDamageClassApiController, MoveLearnMethodApiController, MoveTargetApiController, NatureApiController, PalParkAreaApiController, PokeathlonStatApiController, PokedexApiController, PokemonApiController, PokemonColorApiController, PokemonFormApiController, PokemonHabitatApiController, PokemonShapeApiController, PokemonSpeciesApiController, RegionApiController, StatApiController, SuperContestEffectApiController, TypeApiController, VersionApiController, VersionGroupApiController)

	log.Fatal(http.ListenAndServe(":8080", router))
}
