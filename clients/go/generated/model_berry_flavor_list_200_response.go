/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BerryFlavorList200Response struct for BerryFlavorList200Response
type BerryFlavorList200Response struct {
	// The total number of berry flavors
	Count *int32 `json:"count,omitempty"`
	// The URL to the next page of berry flavors (if any)
	Next *string `json:"next,omitempty"`
	// The URL to the previous page of berry flavors (if any)
	Previous *string `json:"previous,omitempty"`
	Results []BerryFlavor `json:"results,omitempty"`
}

// NewBerryFlavorList200Response instantiates a new BerryFlavorList200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBerryFlavorList200Response() *BerryFlavorList200Response {
	this := BerryFlavorList200Response{}
	return &this
}

// NewBerryFlavorList200ResponseWithDefaults instantiates a new BerryFlavorList200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBerryFlavorList200ResponseWithDefaults() *BerryFlavorList200Response {
	this := BerryFlavorList200Response{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *BerryFlavorList200Response) GetCount() int32 {
	if o == nil || isNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BerryFlavorList200Response) GetCountOk() (*int32, bool) {
	if o == nil || isNil(o.Count) {
    return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *BerryFlavorList200Response) HasCount() bool {
	if o != nil && !isNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *BerryFlavorList200Response) SetCount(v int32) {
	o.Count = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *BerryFlavorList200Response) GetNext() string {
	if o == nil || isNil(o.Next) {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BerryFlavorList200Response) GetNextOk() (*string, bool) {
	if o == nil || isNil(o.Next) {
    return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *BerryFlavorList200Response) HasNext() bool {
	if o != nil && !isNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *BerryFlavorList200Response) SetNext(v string) {
	o.Next = &v
}

// GetPrevious returns the Previous field value if set, zero value otherwise.
func (o *BerryFlavorList200Response) GetPrevious() string {
	if o == nil || isNil(o.Previous) {
		var ret string
		return ret
	}
	return *o.Previous
}

// GetPreviousOk returns a tuple with the Previous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BerryFlavorList200Response) GetPreviousOk() (*string, bool) {
	if o == nil || isNil(o.Previous) {
    return nil, false
	}
	return o.Previous, true
}

// HasPrevious returns a boolean if a field has been set.
func (o *BerryFlavorList200Response) HasPrevious() bool {
	if o != nil && !isNil(o.Previous) {
		return true
	}

	return false
}

// SetPrevious gets a reference to the given string and assigns it to the Previous field.
func (o *BerryFlavorList200Response) SetPrevious(v string) {
	o.Previous = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *BerryFlavorList200Response) GetResults() []BerryFlavor {
	if o == nil || isNil(o.Results) {
		var ret []BerryFlavor
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BerryFlavorList200Response) GetResultsOk() ([]BerryFlavor, bool) {
	if o == nil || isNil(o.Results) {
    return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *BerryFlavorList200Response) HasResults() bool {
	if o != nil && !isNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []BerryFlavor and assigns it to the Results field.
func (o *BerryFlavorList200Response) SetResults(v []BerryFlavor) {
	o.Results = v
}

func (o BerryFlavorList200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !isNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	if !isNil(o.Previous) {
		toSerialize["previous"] = o.Previous
	}
	if !isNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	return json.Marshal(toSerialize)
}

type NullableBerryFlavorList200Response struct {
	value *BerryFlavorList200Response
	isSet bool
}

func (v NullableBerryFlavorList200Response) Get() *BerryFlavorList200Response {
	return v.value
}

func (v *NullableBerryFlavorList200Response) Set(val *BerryFlavorList200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableBerryFlavorList200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableBerryFlavorList200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBerryFlavorList200Response(val *BerryFlavorList200Response) *NullableBerryFlavorList200Response {
	return &NullableBerryFlavorList200Response{value: val, isSet: true}
}

func (v NullableBerryFlavorList200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBerryFlavorList200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


