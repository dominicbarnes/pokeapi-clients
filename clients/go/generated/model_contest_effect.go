/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ContestEffect struct for ContestEffect
type ContestEffect struct {
	// The identifier for this contest effect resource
	Id int32 `json:"id"`
	// The base number of hearts the user of this move gets
	Appeal int32 `json:"appeal"`
	// The base number of hearts the user's opponent loses
	Jam int32 `json:"jam"`
	// The flavor text of this contest effect listed in different languages
	EffectEntries []VerboseEffect `json:"effect_entries"`
	// The flavor text of this contest effect listed in different languages
	FlavorTextEntries []FlavorText `json:"flavor_text_entries"`
}

// NewContestEffect instantiates a new ContestEffect object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContestEffect(id int32, appeal int32, jam int32, effectEntries []VerboseEffect, flavorTextEntries []FlavorText) *ContestEffect {
	this := ContestEffect{}
	this.Id = id
	this.Appeal = appeal
	this.Jam = jam
	this.EffectEntries = effectEntries
	this.FlavorTextEntries = flavorTextEntries
	return &this
}

// NewContestEffectWithDefaults instantiates a new ContestEffect object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContestEffectWithDefaults() *ContestEffect {
	this := ContestEffect{}
	return &this
}

// GetId returns the Id field value
func (o *ContestEffect) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ContestEffect) GetIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ContestEffect) SetId(v int32) {
	o.Id = v
}

// GetAppeal returns the Appeal field value
func (o *ContestEffect) GetAppeal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Appeal
}

// GetAppealOk returns a tuple with the Appeal field value
// and a boolean to check if the value has been set.
func (o *ContestEffect) GetAppealOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Appeal, true
}

// SetAppeal sets field value
func (o *ContestEffect) SetAppeal(v int32) {
	o.Appeal = v
}

// GetJam returns the Jam field value
func (o *ContestEffect) GetJam() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Jam
}

// GetJamOk returns a tuple with the Jam field value
// and a boolean to check if the value has been set.
func (o *ContestEffect) GetJamOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Jam, true
}

// SetJam sets field value
func (o *ContestEffect) SetJam(v int32) {
	o.Jam = v
}

// GetEffectEntries returns the EffectEntries field value
func (o *ContestEffect) GetEffectEntries() []VerboseEffect {
	if o == nil {
		var ret []VerboseEffect
		return ret
	}

	return o.EffectEntries
}

// GetEffectEntriesOk returns a tuple with the EffectEntries field value
// and a boolean to check if the value has been set.
func (o *ContestEffect) GetEffectEntriesOk() ([]VerboseEffect, bool) {
	if o == nil {
    return nil, false
	}
	return o.EffectEntries, true
}

// SetEffectEntries sets field value
func (o *ContestEffect) SetEffectEntries(v []VerboseEffect) {
	o.EffectEntries = v
}

// GetFlavorTextEntries returns the FlavorTextEntries field value
func (o *ContestEffect) GetFlavorTextEntries() []FlavorText {
	if o == nil {
		var ret []FlavorText
		return ret
	}

	return o.FlavorTextEntries
}

// GetFlavorTextEntriesOk returns a tuple with the FlavorTextEntries field value
// and a boolean to check if the value has been set.
func (o *ContestEffect) GetFlavorTextEntriesOk() ([]FlavorText, bool) {
	if o == nil {
    return nil, false
	}
	return o.FlavorTextEntries, true
}

// SetFlavorTextEntries sets field value
func (o *ContestEffect) SetFlavorTextEntries(v []FlavorText) {
	o.FlavorTextEntries = v
}

func (o ContestEffect) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["appeal"] = o.Appeal
	}
	if true {
		toSerialize["jam"] = o.Jam
	}
	if true {
		toSerialize["effect_entries"] = o.EffectEntries
	}
	if true {
		toSerialize["flavor_text_entries"] = o.FlavorTextEntries
	}
	return json.Marshal(toSerialize)
}

type NullableContestEffect struct {
	value *ContestEffect
	isSet bool
}

func (v NullableContestEffect) Get() *ContestEffect {
	return v.value
}

func (v *NullableContestEffect) Set(val *ContestEffect) {
	v.value = val
	v.isSet = true
}

func (v NullableContestEffect) IsSet() bool {
	return v.isSet
}

func (v *NullableContestEffect) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContestEffect(val *ContestEffect) *NullableContestEffect {
	return &NullableContestEffect{value: val, isSet: true}
}

func (v NullableContestEffect) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContestEffect) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


