/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EvolutionChain struct for EvolutionChain
type EvolutionChain struct {
	// The identifier for this evolution chain resource
	Id int32 `json:"id"`
	BabyTriggerItem NullableEvolutionChainBabyTriggerItem `json:"baby_trigger_item,omitempty"`
	Chain EvolutionChainChain `json:"chain"`
}

// NewEvolutionChain instantiates a new EvolutionChain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEvolutionChain(id int32, chain EvolutionChainChain) *EvolutionChain {
	this := EvolutionChain{}
	this.Id = id
	this.Chain = chain
	return &this
}

// NewEvolutionChainWithDefaults instantiates a new EvolutionChain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEvolutionChainWithDefaults() *EvolutionChain {
	this := EvolutionChain{}
	return &this
}

// GetId returns the Id field value
func (o *EvolutionChain) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EvolutionChain) GetIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EvolutionChain) SetId(v int32) {
	o.Id = v
}

// GetBabyTriggerItem returns the BabyTriggerItem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EvolutionChain) GetBabyTriggerItem() EvolutionChainBabyTriggerItem {
	if o == nil || isNil(o.BabyTriggerItem.Get()) {
		var ret EvolutionChainBabyTriggerItem
		return ret
	}
	return *o.BabyTriggerItem.Get()
}

// GetBabyTriggerItemOk returns a tuple with the BabyTriggerItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EvolutionChain) GetBabyTriggerItemOk() (*EvolutionChainBabyTriggerItem, bool) {
	if o == nil {
    return nil, false
	}
	return o.BabyTriggerItem.Get(), o.BabyTriggerItem.IsSet()
}

// HasBabyTriggerItem returns a boolean if a field has been set.
func (o *EvolutionChain) HasBabyTriggerItem() bool {
	if o != nil && o.BabyTriggerItem.IsSet() {
		return true
	}

	return false
}

// SetBabyTriggerItem gets a reference to the given NullableEvolutionChainBabyTriggerItem and assigns it to the BabyTriggerItem field.
func (o *EvolutionChain) SetBabyTriggerItem(v EvolutionChainBabyTriggerItem) {
	o.BabyTriggerItem.Set(&v)
}
// SetBabyTriggerItemNil sets the value for BabyTriggerItem to be an explicit nil
func (o *EvolutionChain) SetBabyTriggerItemNil() {
	o.BabyTriggerItem.Set(nil)
}

// UnsetBabyTriggerItem ensures that no value is present for BabyTriggerItem, not even an explicit nil
func (o *EvolutionChain) UnsetBabyTriggerItem() {
	o.BabyTriggerItem.Unset()
}

// GetChain returns the Chain field value
func (o *EvolutionChain) GetChain() EvolutionChainChain {
	if o == nil {
		var ret EvolutionChainChain
		return ret
	}

	return o.Chain
}

// GetChainOk returns a tuple with the Chain field value
// and a boolean to check if the value has been set.
func (o *EvolutionChain) GetChainOk() (*EvolutionChainChain, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Chain, true
}

// SetChain sets field value
func (o *EvolutionChain) SetChain(v EvolutionChainChain) {
	o.Chain = v
}

func (o EvolutionChain) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.BabyTriggerItem.IsSet() {
		toSerialize["baby_trigger_item"] = o.BabyTriggerItem.Get()
	}
	if true {
		toSerialize["chain"] = o.Chain
	}
	return json.Marshal(toSerialize)
}

type NullableEvolutionChain struct {
	value *EvolutionChain
	isSet bool
}

func (v NullableEvolutionChain) Get() *EvolutionChain {
	return v.value
}

func (v *NullableEvolutionChain) Set(val *EvolutionChain) {
	v.value = val
	v.isSet = true
}

func (v NullableEvolutionChain) IsSet() bool {
	return v.isSet
}

func (v *NullableEvolutionChain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEvolutionChain(val *EvolutionChain) *NullableEvolutionChain {
	return &NullableEvolutionChain{value: val, isSet: true}
}

func (v NullableEvolutionChain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEvolutionChain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


