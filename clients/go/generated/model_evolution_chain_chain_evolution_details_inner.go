/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EvolutionChainChainEvolutionDetailsInner struct for EvolutionChainChainEvolutionDetailsInner
type EvolutionChainChainEvolutionDetailsInner struct {
	Item *EvolutionChainChainEvolutionDetailsInnerItem `json:"item,omitempty"`
	Trigger *EvolutionTrigger `json:"trigger,omitempty"`
	// The required female gender of the evolving Pokémon species. Must be either 1 or 2, or null if the Pokémon species has no gender or the gender is fixed.
	Gender NullableInt32 `json:"gender,omitempty"`
	HeldItem *EvolutionChainChainEvolutionDetailsInnerItem `json:"held_item,omitempty"`
	KnownMove *EvolutionChainChainEvolutionDetailsInnerKnownMove `json:"known_move,omitempty"`
	KnownMoveType *EvolutionChainChainEvolutionDetailsInnerKnownMoveType `json:"known_move_type,omitempty"`
	Location *EvolutionChainChainEvolutionDetailsInnerLocation `json:"location,omitempty"`
	// The minimum required level of the evolving Pokémon species
	MinLevel NullableInt32 `json:"min_level,omitempty"`
	// The minimum required happiness of the evolving Pokémon species
	MinHappiness NullableInt32 `json:"min_happiness,omitempty"`
	// The minimum required beauty of the evolving Pokémon species
	MinBeauty NullableInt32 `json:"min_beauty,omitempty"`
	// The minimum required affection of the evolving Pokémon species
	MinAffection NullableInt32 `json:"min_affection,omitempty"`
	// Whether or not it must be raining in the overworld to evolve into this Pokémon species
	NeedsOverworldRain *bool `json:"needs_overworld_rain,omitempty"`
	PartySpecies *EvolutionChainChainEvolutionDetailsInnerPartySpecies `json:"party_species,omitempty"`
	PartyType *EvolutionChainChainEvolutionDetailsInnerKnownMoveType `json:"party_type,omitempty"`
	// The required relation between the Pokémon's Attack and Defense stats. 1 means Attack > Defense, 0 means Attack = Defense, and -1 means Attack < Defense.
	RelativePhysicalStats NullableInt32 `json:"relative_physical_stats,omitempty"`
	// The required time of day. Day or night.
	TimeOfDay *string `json:"time_of_day,omitempty"`
	TradeSpecies *EvolutionChainChainEvolutionDetailsInnerPartySpecies `json:"trade_species,omitempty"`
	// Whether or not the 3DS needs to be turned upside-down as this Pokémon levels up.
	TurnUpsideDown *bool `json:"turn_upside_down,omitempty"`
}

// NewEvolutionChainChainEvolutionDetailsInner instantiates a new EvolutionChainChainEvolutionDetailsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEvolutionChainChainEvolutionDetailsInner() *EvolutionChainChainEvolutionDetailsInner {
	this := EvolutionChainChainEvolutionDetailsInner{}
	return &this
}

// NewEvolutionChainChainEvolutionDetailsInnerWithDefaults instantiates a new EvolutionChainChainEvolutionDetailsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEvolutionChainChainEvolutionDetailsInnerWithDefaults() *EvolutionChainChainEvolutionDetailsInner {
	this := EvolutionChainChainEvolutionDetailsInner{}
	return &this
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *EvolutionChainChainEvolutionDetailsInner) GetItem() EvolutionChainChainEvolutionDetailsInnerItem {
	if o == nil || isNil(o.Item) {
		var ret EvolutionChainChainEvolutionDetailsInnerItem
		return ret
	}
	return *o.Item
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) GetItemOk() (*EvolutionChainChainEvolutionDetailsInnerItem, bool) {
	if o == nil || isNil(o.Item) {
    return nil, false
	}
	return o.Item, true
}

// HasItem returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasItem() bool {
	if o != nil && !isNil(o.Item) {
		return true
	}

	return false
}

// SetItem gets a reference to the given EvolutionChainChainEvolutionDetailsInnerItem and assigns it to the Item field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetItem(v EvolutionChainChainEvolutionDetailsInnerItem) {
	o.Item = &v
}

// GetTrigger returns the Trigger field value if set, zero value otherwise.
func (o *EvolutionChainChainEvolutionDetailsInner) GetTrigger() EvolutionTrigger {
	if o == nil || isNil(o.Trigger) {
		var ret EvolutionTrigger
		return ret
	}
	return *o.Trigger
}

// GetTriggerOk returns a tuple with the Trigger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) GetTriggerOk() (*EvolutionTrigger, bool) {
	if o == nil || isNil(o.Trigger) {
    return nil, false
	}
	return o.Trigger, true
}

// HasTrigger returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasTrigger() bool {
	if o != nil && !isNil(o.Trigger) {
		return true
	}

	return false
}

// SetTrigger gets a reference to the given EvolutionTrigger and assigns it to the Trigger field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetTrigger(v EvolutionTrigger) {
	o.Trigger = &v
}

// GetGender returns the Gender field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EvolutionChainChainEvolutionDetailsInner) GetGender() int32 {
	if o == nil || isNil(o.Gender.Get()) {
		var ret int32
		return ret
	}
	return *o.Gender.Get()
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EvolutionChainChainEvolutionDetailsInner) GetGenderOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.Gender.Get(), o.Gender.IsSet()
}

// HasGender returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasGender() bool {
	if o != nil && o.Gender.IsSet() {
		return true
	}

	return false
}

// SetGender gets a reference to the given NullableInt32 and assigns it to the Gender field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetGender(v int32) {
	o.Gender.Set(&v)
}
// SetGenderNil sets the value for Gender to be an explicit nil
func (o *EvolutionChainChainEvolutionDetailsInner) SetGenderNil() {
	o.Gender.Set(nil)
}

// UnsetGender ensures that no value is present for Gender, not even an explicit nil
func (o *EvolutionChainChainEvolutionDetailsInner) UnsetGender() {
	o.Gender.Unset()
}

// GetHeldItem returns the HeldItem field value if set, zero value otherwise.
func (o *EvolutionChainChainEvolutionDetailsInner) GetHeldItem() EvolutionChainChainEvolutionDetailsInnerItem {
	if o == nil || isNil(o.HeldItem) {
		var ret EvolutionChainChainEvolutionDetailsInnerItem
		return ret
	}
	return *o.HeldItem
}

// GetHeldItemOk returns a tuple with the HeldItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) GetHeldItemOk() (*EvolutionChainChainEvolutionDetailsInnerItem, bool) {
	if o == nil || isNil(o.HeldItem) {
    return nil, false
	}
	return o.HeldItem, true
}

// HasHeldItem returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasHeldItem() bool {
	if o != nil && !isNil(o.HeldItem) {
		return true
	}

	return false
}

// SetHeldItem gets a reference to the given EvolutionChainChainEvolutionDetailsInnerItem and assigns it to the HeldItem field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetHeldItem(v EvolutionChainChainEvolutionDetailsInnerItem) {
	o.HeldItem = &v
}

// GetKnownMove returns the KnownMove field value if set, zero value otherwise.
func (o *EvolutionChainChainEvolutionDetailsInner) GetKnownMove() EvolutionChainChainEvolutionDetailsInnerKnownMove {
	if o == nil || isNil(o.KnownMove) {
		var ret EvolutionChainChainEvolutionDetailsInnerKnownMove
		return ret
	}
	return *o.KnownMove
}

// GetKnownMoveOk returns a tuple with the KnownMove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) GetKnownMoveOk() (*EvolutionChainChainEvolutionDetailsInnerKnownMove, bool) {
	if o == nil || isNil(o.KnownMove) {
    return nil, false
	}
	return o.KnownMove, true
}

// HasKnownMove returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasKnownMove() bool {
	if o != nil && !isNil(o.KnownMove) {
		return true
	}

	return false
}

// SetKnownMove gets a reference to the given EvolutionChainChainEvolutionDetailsInnerKnownMove and assigns it to the KnownMove field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetKnownMove(v EvolutionChainChainEvolutionDetailsInnerKnownMove) {
	o.KnownMove = &v
}

// GetKnownMoveType returns the KnownMoveType field value if set, zero value otherwise.
func (o *EvolutionChainChainEvolutionDetailsInner) GetKnownMoveType() EvolutionChainChainEvolutionDetailsInnerKnownMoveType {
	if o == nil || isNil(o.KnownMoveType) {
		var ret EvolutionChainChainEvolutionDetailsInnerKnownMoveType
		return ret
	}
	return *o.KnownMoveType
}

// GetKnownMoveTypeOk returns a tuple with the KnownMoveType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) GetKnownMoveTypeOk() (*EvolutionChainChainEvolutionDetailsInnerKnownMoveType, bool) {
	if o == nil || isNil(o.KnownMoveType) {
    return nil, false
	}
	return o.KnownMoveType, true
}

// HasKnownMoveType returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasKnownMoveType() bool {
	if o != nil && !isNil(o.KnownMoveType) {
		return true
	}

	return false
}

// SetKnownMoveType gets a reference to the given EvolutionChainChainEvolutionDetailsInnerKnownMoveType and assigns it to the KnownMoveType field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetKnownMoveType(v EvolutionChainChainEvolutionDetailsInnerKnownMoveType) {
	o.KnownMoveType = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *EvolutionChainChainEvolutionDetailsInner) GetLocation() EvolutionChainChainEvolutionDetailsInnerLocation {
	if o == nil || isNil(o.Location) {
		var ret EvolutionChainChainEvolutionDetailsInnerLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) GetLocationOk() (*EvolutionChainChainEvolutionDetailsInnerLocation, bool) {
	if o == nil || isNil(o.Location) {
    return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasLocation() bool {
	if o != nil && !isNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given EvolutionChainChainEvolutionDetailsInnerLocation and assigns it to the Location field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetLocation(v EvolutionChainChainEvolutionDetailsInnerLocation) {
	o.Location = &v
}

// GetMinLevel returns the MinLevel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EvolutionChainChainEvolutionDetailsInner) GetMinLevel() int32 {
	if o == nil || isNil(o.MinLevel.Get()) {
		var ret int32
		return ret
	}
	return *o.MinLevel.Get()
}

// GetMinLevelOk returns a tuple with the MinLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EvolutionChainChainEvolutionDetailsInner) GetMinLevelOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.MinLevel.Get(), o.MinLevel.IsSet()
}

// HasMinLevel returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasMinLevel() bool {
	if o != nil && o.MinLevel.IsSet() {
		return true
	}

	return false
}

// SetMinLevel gets a reference to the given NullableInt32 and assigns it to the MinLevel field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetMinLevel(v int32) {
	o.MinLevel.Set(&v)
}
// SetMinLevelNil sets the value for MinLevel to be an explicit nil
func (o *EvolutionChainChainEvolutionDetailsInner) SetMinLevelNil() {
	o.MinLevel.Set(nil)
}

// UnsetMinLevel ensures that no value is present for MinLevel, not even an explicit nil
func (o *EvolutionChainChainEvolutionDetailsInner) UnsetMinLevel() {
	o.MinLevel.Unset()
}

// GetMinHappiness returns the MinHappiness field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EvolutionChainChainEvolutionDetailsInner) GetMinHappiness() int32 {
	if o == nil || isNil(o.MinHappiness.Get()) {
		var ret int32
		return ret
	}
	return *o.MinHappiness.Get()
}

// GetMinHappinessOk returns a tuple with the MinHappiness field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EvolutionChainChainEvolutionDetailsInner) GetMinHappinessOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.MinHappiness.Get(), o.MinHappiness.IsSet()
}

// HasMinHappiness returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasMinHappiness() bool {
	if o != nil && o.MinHappiness.IsSet() {
		return true
	}

	return false
}

// SetMinHappiness gets a reference to the given NullableInt32 and assigns it to the MinHappiness field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetMinHappiness(v int32) {
	o.MinHappiness.Set(&v)
}
// SetMinHappinessNil sets the value for MinHappiness to be an explicit nil
func (o *EvolutionChainChainEvolutionDetailsInner) SetMinHappinessNil() {
	o.MinHappiness.Set(nil)
}

// UnsetMinHappiness ensures that no value is present for MinHappiness, not even an explicit nil
func (o *EvolutionChainChainEvolutionDetailsInner) UnsetMinHappiness() {
	o.MinHappiness.Unset()
}

// GetMinBeauty returns the MinBeauty field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EvolutionChainChainEvolutionDetailsInner) GetMinBeauty() int32 {
	if o == nil || isNil(o.MinBeauty.Get()) {
		var ret int32
		return ret
	}
	return *o.MinBeauty.Get()
}

// GetMinBeautyOk returns a tuple with the MinBeauty field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EvolutionChainChainEvolutionDetailsInner) GetMinBeautyOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.MinBeauty.Get(), o.MinBeauty.IsSet()
}

// HasMinBeauty returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasMinBeauty() bool {
	if o != nil && o.MinBeauty.IsSet() {
		return true
	}

	return false
}

// SetMinBeauty gets a reference to the given NullableInt32 and assigns it to the MinBeauty field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetMinBeauty(v int32) {
	o.MinBeauty.Set(&v)
}
// SetMinBeautyNil sets the value for MinBeauty to be an explicit nil
func (o *EvolutionChainChainEvolutionDetailsInner) SetMinBeautyNil() {
	o.MinBeauty.Set(nil)
}

// UnsetMinBeauty ensures that no value is present for MinBeauty, not even an explicit nil
func (o *EvolutionChainChainEvolutionDetailsInner) UnsetMinBeauty() {
	o.MinBeauty.Unset()
}

// GetMinAffection returns the MinAffection field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EvolutionChainChainEvolutionDetailsInner) GetMinAffection() int32 {
	if o == nil || isNil(o.MinAffection.Get()) {
		var ret int32
		return ret
	}
	return *o.MinAffection.Get()
}

// GetMinAffectionOk returns a tuple with the MinAffection field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EvolutionChainChainEvolutionDetailsInner) GetMinAffectionOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.MinAffection.Get(), o.MinAffection.IsSet()
}

// HasMinAffection returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasMinAffection() bool {
	if o != nil && o.MinAffection.IsSet() {
		return true
	}

	return false
}

// SetMinAffection gets a reference to the given NullableInt32 and assigns it to the MinAffection field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetMinAffection(v int32) {
	o.MinAffection.Set(&v)
}
// SetMinAffectionNil sets the value for MinAffection to be an explicit nil
func (o *EvolutionChainChainEvolutionDetailsInner) SetMinAffectionNil() {
	o.MinAffection.Set(nil)
}

// UnsetMinAffection ensures that no value is present for MinAffection, not even an explicit nil
func (o *EvolutionChainChainEvolutionDetailsInner) UnsetMinAffection() {
	o.MinAffection.Unset()
}

// GetNeedsOverworldRain returns the NeedsOverworldRain field value if set, zero value otherwise.
func (o *EvolutionChainChainEvolutionDetailsInner) GetNeedsOverworldRain() bool {
	if o == nil || isNil(o.NeedsOverworldRain) {
		var ret bool
		return ret
	}
	return *o.NeedsOverworldRain
}

// GetNeedsOverworldRainOk returns a tuple with the NeedsOverworldRain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) GetNeedsOverworldRainOk() (*bool, bool) {
	if o == nil || isNil(o.NeedsOverworldRain) {
    return nil, false
	}
	return o.NeedsOverworldRain, true
}

// HasNeedsOverworldRain returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasNeedsOverworldRain() bool {
	if o != nil && !isNil(o.NeedsOverworldRain) {
		return true
	}

	return false
}

// SetNeedsOverworldRain gets a reference to the given bool and assigns it to the NeedsOverworldRain field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetNeedsOverworldRain(v bool) {
	o.NeedsOverworldRain = &v
}

// GetPartySpecies returns the PartySpecies field value if set, zero value otherwise.
func (o *EvolutionChainChainEvolutionDetailsInner) GetPartySpecies() EvolutionChainChainEvolutionDetailsInnerPartySpecies {
	if o == nil || isNil(o.PartySpecies) {
		var ret EvolutionChainChainEvolutionDetailsInnerPartySpecies
		return ret
	}
	return *o.PartySpecies
}

// GetPartySpeciesOk returns a tuple with the PartySpecies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) GetPartySpeciesOk() (*EvolutionChainChainEvolutionDetailsInnerPartySpecies, bool) {
	if o == nil || isNil(o.PartySpecies) {
    return nil, false
	}
	return o.PartySpecies, true
}

// HasPartySpecies returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasPartySpecies() bool {
	if o != nil && !isNil(o.PartySpecies) {
		return true
	}

	return false
}

// SetPartySpecies gets a reference to the given EvolutionChainChainEvolutionDetailsInnerPartySpecies and assigns it to the PartySpecies field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetPartySpecies(v EvolutionChainChainEvolutionDetailsInnerPartySpecies) {
	o.PartySpecies = &v
}

// GetPartyType returns the PartyType field value if set, zero value otherwise.
func (o *EvolutionChainChainEvolutionDetailsInner) GetPartyType() EvolutionChainChainEvolutionDetailsInnerKnownMoveType {
	if o == nil || isNil(o.PartyType) {
		var ret EvolutionChainChainEvolutionDetailsInnerKnownMoveType
		return ret
	}
	return *o.PartyType
}

// GetPartyTypeOk returns a tuple with the PartyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) GetPartyTypeOk() (*EvolutionChainChainEvolutionDetailsInnerKnownMoveType, bool) {
	if o == nil || isNil(o.PartyType) {
    return nil, false
	}
	return o.PartyType, true
}

// HasPartyType returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasPartyType() bool {
	if o != nil && !isNil(o.PartyType) {
		return true
	}

	return false
}

// SetPartyType gets a reference to the given EvolutionChainChainEvolutionDetailsInnerKnownMoveType and assigns it to the PartyType field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetPartyType(v EvolutionChainChainEvolutionDetailsInnerKnownMoveType) {
	o.PartyType = &v
}

// GetRelativePhysicalStats returns the RelativePhysicalStats field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EvolutionChainChainEvolutionDetailsInner) GetRelativePhysicalStats() int32 {
	if o == nil || isNil(o.RelativePhysicalStats.Get()) {
		var ret int32
		return ret
	}
	return *o.RelativePhysicalStats.Get()
}

// GetRelativePhysicalStatsOk returns a tuple with the RelativePhysicalStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EvolutionChainChainEvolutionDetailsInner) GetRelativePhysicalStatsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.RelativePhysicalStats.Get(), o.RelativePhysicalStats.IsSet()
}

// HasRelativePhysicalStats returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasRelativePhysicalStats() bool {
	if o != nil && o.RelativePhysicalStats.IsSet() {
		return true
	}

	return false
}

// SetRelativePhysicalStats gets a reference to the given NullableInt32 and assigns it to the RelativePhysicalStats field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetRelativePhysicalStats(v int32) {
	o.RelativePhysicalStats.Set(&v)
}
// SetRelativePhysicalStatsNil sets the value for RelativePhysicalStats to be an explicit nil
func (o *EvolutionChainChainEvolutionDetailsInner) SetRelativePhysicalStatsNil() {
	o.RelativePhysicalStats.Set(nil)
}

// UnsetRelativePhysicalStats ensures that no value is present for RelativePhysicalStats, not even an explicit nil
func (o *EvolutionChainChainEvolutionDetailsInner) UnsetRelativePhysicalStats() {
	o.RelativePhysicalStats.Unset()
}

// GetTimeOfDay returns the TimeOfDay field value if set, zero value otherwise.
func (o *EvolutionChainChainEvolutionDetailsInner) GetTimeOfDay() string {
	if o == nil || isNil(o.TimeOfDay) {
		var ret string
		return ret
	}
	return *o.TimeOfDay
}

// GetTimeOfDayOk returns a tuple with the TimeOfDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) GetTimeOfDayOk() (*string, bool) {
	if o == nil || isNil(o.TimeOfDay) {
    return nil, false
	}
	return o.TimeOfDay, true
}

// HasTimeOfDay returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasTimeOfDay() bool {
	if o != nil && !isNil(o.TimeOfDay) {
		return true
	}

	return false
}

// SetTimeOfDay gets a reference to the given string and assigns it to the TimeOfDay field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetTimeOfDay(v string) {
	o.TimeOfDay = &v
}

// GetTradeSpecies returns the TradeSpecies field value if set, zero value otherwise.
func (o *EvolutionChainChainEvolutionDetailsInner) GetTradeSpecies() EvolutionChainChainEvolutionDetailsInnerPartySpecies {
	if o == nil || isNil(o.TradeSpecies) {
		var ret EvolutionChainChainEvolutionDetailsInnerPartySpecies
		return ret
	}
	return *o.TradeSpecies
}

// GetTradeSpeciesOk returns a tuple with the TradeSpecies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) GetTradeSpeciesOk() (*EvolutionChainChainEvolutionDetailsInnerPartySpecies, bool) {
	if o == nil || isNil(o.TradeSpecies) {
    return nil, false
	}
	return o.TradeSpecies, true
}

// HasTradeSpecies returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasTradeSpecies() bool {
	if o != nil && !isNil(o.TradeSpecies) {
		return true
	}

	return false
}

// SetTradeSpecies gets a reference to the given EvolutionChainChainEvolutionDetailsInnerPartySpecies and assigns it to the TradeSpecies field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetTradeSpecies(v EvolutionChainChainEvolutionDetailsInnerPartySpecies) {
	o.TradeSpecies = &v
}

// GetTurnUpsideDown returns the TurnUpsideDown field value if set, zero value otherwise.
func (o *EvolutionChainChainEvolutionDetailsInner) GetTurnUpsideDown() bool {
	if o == nil || isNil(o.TurnUpsideDown) {
		var ret bool
		return ret
	}
	return *o.TurnUpsideDown
}

// GetTurnUpsideDownOk returns a tuple with the TurnUpsideDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) GetTurnUpsideDownOk() (*bool, bool) {
	if o == nil || isNil(o.TurnUpsideDown) {
    return nil, false
	}
	return o.TurnUpsideDown, true
}

// HasTurnUpsideDown returns a boolean if a field has been set.
func (o *EvolutionChainChainEvolutionDetailsInner) HasTurnUpsideDown() bool {
	if o != nil && !isNil(o.TurnUpsideDown) {
		return true
	}

	return false
}

// SetTurnUpsideDown gets a reference to the given bool and assigns it to the TurnUpsideDown field.
func (o *EvolutionChainChainEvolutionDetailsInner) SetTurnUpsideDown(v bool) {
	o.TurnUpsideDown = &v
}

func (o EvolutionChainChainEvolutionDetailsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Item) {
		toSerialize["item"] = o.Item
	}
	if !isNil(o.Trigger) {
		toSerialize["trigger"] = o.Trigger
	}
	if o.Gender.IsSet() {
		toSerialize["gender"] = o.Gender.Get()
	}
	if !isNil(o.HeldItem) {
		toSerialize["held_item"] = o.HeldItem
	}
	if !isNil(o.KnownMove) {
		toSerialize["known_move"] = o.KnownMove
	}
	if !isNil(o.KnownMoveType) {
		toSerialize["known_move_type"] = o.KnownMoveType
	}
	if !isNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if o.MinLevel.IsSet() {
		toSerialize["min_level"] = o.MinLevel.Get()
	}
	if o.MinHappiness.IsSet() {
		toSerialize["min_happiness"] = o.MinHappiness.Get()
	}
	if o.MinBeauty.IsSet() {
		toSerialize["min_beauty"] = o.MinBeauty.Get()
	}
	if o.MinAffection.IsSet() {
		toSerialize["min_affection"] = o.MinAffection.Get()
	}
	if !isNil(o.NeedsOverworldRain) {
		toSerialize["needs_overworld_rain"] = o.NeedsOverworldRain
	}
	if !isNil(o.PartySpecies) {
		toSerialize["party_species"] = o.PartySpecies
	}
	if !isNil(o.PartyType) {
		toSerialize["party_type"] = o.PartyType
	}
	if o.RelativePhysicalStats.IsSet() {
		toSerialize["relative_physical_stats"] = o.RelativePhysicalStats.Get()
	}
	if !isNil(o.TimeOfDay) {
		toSerialize["time_of_day"] = o.TimeOfDay
	}
	if !isNil(o.TradeSpecies) {
		toSerialize["trade_species"] = o.TradeSpecies
	}
	if !isNil(o.TurnUpsideDown) {
		toSerialize["turn_upside_down"] = o.TurnUpsideDown
	}
	return json.Marshal(toSerialize)
}

type NullableEvolutionChainChainEvolutionDetailsInner struct {
	value *EvolutionChainChainEvolutionDetailsInner
	isSet bool
}

func (v NullableEvolutionChainChainEvolutionDetailsInner) Get() *EvolutionChainChainEvolutionDetailsInner {
	return v.value
}

func (v *NullableEvolutionChainChainEvolutionDetailsInner) Set(val *EvolutionChainChainEvolutionDetailsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableEvolutionChainChainEvolutionDetailsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableEvolutionChainChainEvolutionDetailsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEvolutionChainChainEvolutionDetailsInner(val *EvolutionChainChainEvolutionDetailsInner) *NullableEvolutionChainChainEvolutionDetailsInner {
	return &NullableEvolutionChainChainEvolutionDetailsInner{value: val, isSet: true}
}

func (v NullableEvolutionChainChainEvolutionDetailsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEvolutionChainChainEvolutionDetailsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


