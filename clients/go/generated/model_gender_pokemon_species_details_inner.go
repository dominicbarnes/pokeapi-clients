/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GenderPokemonSpeciesDetailsInner struct for GenderPokemonSpeciesDetailsInner
type GenderPokemonSpeciesDetailsInner struct {
	// The chance of this Pok√©mon being female, in eighths; or -1 for genderless
	Rate *int32 `json:"rate,omitempty"`
}

// NewGenderPokemonSpeciesDetailsInner instantiates a new GenderPokemonSpeciesDetailsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenderPokemonSpeciesDetailsInner() *GenderPokemonSpeciesDetailsInner {
	this := GenderPokemonSpeciesDetailsInner{}
	return &this
}

// NewGenderPokemonSpeciesDetailsInnerWithDefaults instantiates a new GenderPokemonSpeciesDetailsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenderPokemonSpeciesDetailsInnerWithDefaults() *GenderPokemonSpeciesDetailsInner {
	this := GenderPokemonSpeciesDetailsInner{}
	return &this
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *GenderPokemonSpeciesDetailsInner) GetRate() int32 {
	if o == nil || isNil(o.Rate) {
		var ret int32
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenderPokemonSpeciesDetailsInner) GetRateOk() (*int32, bool) {
	if o == nil || isNil(o.Rate) {
    return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *GenderPokemonSpeciesDetailsInner) HasRate() bool {
	if o != nil && !isNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given int32 and assigns it to the Rate field.
func (o *GenderPokemonSpeciesDetailsInner) SetRate(v int32) {
	o.Rate = &v
}

func (o GenderPokemonSpeciesDetailsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	return json.Marshal(toSerialize)
}

type NullableGenderPokemonSpeciesDetailsInner struct {
	value *GenderPokemonSpeciesDetailsInner
	isSet bool
}

func (v NullableGenderPokemonSpeciesDetailsInner) Get() *GenderPokemonSpeciesDetailsInner {
	return v.value
}

func (v *NullableGenderPokemonSpeciesDetailsInner) Set(val *GenderPokemonSpeciesDetailsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGenderPokemonSpeciesDetailsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGenderPokemonSpeciesDetailsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenderPokemonSpeciesDetailsInner(val *GenderPokemonSpeciesDetailsInner) *NullableGenderPokemonSpeciesDetailsInner {
	return &NullableGenderPokemonSpeciesDetailsInner{value: val, isSet: true}
}

func (v NullableGenderPokemonSpeciesDetailsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenderPokemonSpeciesDetailsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


