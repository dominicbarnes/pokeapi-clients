/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GrowthRate struct for GrowthRate
type GrowthRate struct {
	// The identifier for this growth rate resource
	Id *int32 `json:"id,omitempty"`
	// The name for this growth rate resource
	Name *string `json:"name,omitempty"`
	// The formula used to calculate the rate at which the Pok√©mon species gains level
	Formula *string `json:"formula,omitempty"`
	// The description of this growth rate listed in different languages
	Descriptions []Description `json:"descriptions,omitempty"`
}

// NewGrowthRate instantiates a new GrowthRate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGrowthRate() *GrowthRate {
	this := GrowthRate{}
	return &this
}

// NewGrowthRateWithDefaults instantiates a new GrowthRate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGrowthRateWithDefaults() *GrowthRate {
	this := GrowthRate{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GrowthRate) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrowthRate) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GrowthRate) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GrowthRate) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GrowthRate) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrowthRate) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GrowthRate) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GrowthRate) SetName(v string) {
	o.Name = &v
}

// GetFormula returns the Formula field value if set, zero value otherwise.
func (o *GrowthRate) GetFormula() string {
	if o == nil || isNil(o.Formula) {
		var ret string
		return ret
	}
	return *o.Formula
}

// GetFormulaOk returns a tuple with the Formula field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrowthRate) GetFormulaOk() (*string, bool) {
	if o == nil || isNil(o.Formula) {
    return nil, false
	}
	return o.Formula, true
}

// HasFormula returns a boolean if a field has been set.
func (o *GrowthRate) HasFormula() bool {
	if o != nil && !isNil(o.Formula) {
		return true
	}

	return false
}

// SetFormula gets a reference to the given string and assigns it to the Formula field.
func (o *GrowthRate) SetFormula(v string) {
	o.Formula = &v
}

// GetDescriptions returns the Descriptions field value if set, zero value otherwise.
func (o *GrowthRate) GetDescriptions() []Description {
	if o == nil || isNil(o.Descriptions) {
		var ret []Description
		return ret
	}
	return o.Descriptions
}

// GetDescriptionsOk returns a tuple with the Descriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GrowthRate) GetDescriptionsOk() ([]Description, bool) {
	if o == nil || isNil(o.Descriptions) {
    return nil, false
	}
	return o.Descriptions, true
}

// HasDescriptions returns a boolean if a field has been set.
func (o *GrowthRate) HasDescriptions() bool {
	if o != nil && !isNil(o.Descriptions) {
		return true
	}

	return false
}

// SetDescriptions gets a reference to the given []Description and assigns it to the Descriptions field.
func (o *GrowthRate) SetDescriptions(v []Description) {
	o.Descriptions = v
}

func (o GrowthRate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Formula) {
		toSerialize["formula"] = o.Formula
	}
	if !isNil(o.Descriptions) {
		toSerialize["descriptions"] = o.Descriptions
	}
	return json.Marshal(toSerialize)
}

type NullableGrowthRate struct {
	value *GrowthRate
	isSet bool
}

func (v NullableGrowthRate) Get() *GrowthRate {
	return v.value
}

func (v *NullableGrowthRate) Set(val *GrowthRate) {
	v.value = val
	v.isSet = true
}

func (v NullableGrowthRate) IsSet() bool {
	return v.isSet
}

func (v *NullableGrowthRate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGrowthRate(val *GrowthRate) *NullableGrowthRate {
	return &NullableGrowthRate{value: val, isSet: true}
}

func (v NullableGrowthRate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGrowthRate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


