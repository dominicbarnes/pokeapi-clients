/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ItemFlingEffect struct for ItemFlingEffect
type ItemFlingEffect struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	EffectEntries []VerboseEffect `json:"effect_entries,omitempty"`
	Items []Item `json:"items,omitempty"`
}

// NewItemFlingEffect instantiates a new ItemFlingEffect object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewItemFlingEffect() *ItemFlingEffect {
	this := ItemFlingEffect{}
	return &this
}

// NewItemFlingEffectWithDefaults instantiates a new ItemFlingEffect object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewItemFlingEffectWithDefaults() *ItemFlingEffect {
	this := ItemFlingEffect{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ItemFlingEffect) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemFlingEffect) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ItemFlingEffect) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ItemFlingEffect) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ItemFlingEffect) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemFlingEffect) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ItemFlingEffect) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ItemFlingEffect) SetName(v string) {
	o.Name = &v
}

// GetEffectEntries returns the EffectEntries field value if set, zero value otherwise.
func (o *ItemFlingEffect) GetEffectEntries() []VerboseEffect {
	if o == nil || isNil(o.EffectEntries) {
		var ret []VerboseEffect
		return ret
	}
	return o.EffectEntries
}

// GetEffectEntriesOk returns a tuple with the EffectEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemFlingEffect) GetEffectEntriesOk() ([]VerboseEffect, bool) {
	if o == nil || isNil(o.EffectEntries) {
    return nil, false
	}
	return o.EffectEntries, true
}

// HasEffectEntries returns a boolean if a field has been set.
func (o *ItemFlingEffect) HasEffectEntries() bool {
	if o != nil && !isNil(o.EffectEntries) {
		return true
	}

	return false
}

// SetEffectEntries gets a reference to the given []VerboseEffect and assigns it to the EffectEntries field.
func (o *ItemFlingEffect) SetEffectEntries(v []VerboseEffect) {
	o.EffectEntries = v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ItemFlingEffect) GetItems() []Item {
	if o == nil || isNil(o.Items) {
		var ret []Item
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ItemFlingEffect) GetItemsOk() ([]Item, bool) {
	if o == nil || isNil(o.Items) {
    return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ItemFlingEffect) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []Item and assigns it to the Items field.
func (o *ItemFlingEffect) SetItems(v []Item) {
	o.Items = v
}

func (o ItemFlingEffect) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.EffectEntries) {
		toSerialize["effect_entries"] = o.EffectEntries
	}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableItemFlingEffect struct {
	value *ItemFlingEffect
	isSet bool
}

func (v NullableItemFlingEffect) Get() *ItemFlingEffect {
	return v.value
}

func (v *NullableItemFlingEffect) Set(val *ItemFlingEffect) {
	v.value = val
	v.isSet = true
}

func (v NullableItemFlingEffect) IsSet() bool {
	return v.isSet
}

func (v *NullableItemFlingEffect) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableItemFlingEffect(val *ItemFlingEffect) *NullableItemFlingEffect {
	return &NullableItemFlingEffect{value: val, isSet: true}
}

func (v NullableItemFlingEffect) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableItemFlingEffect) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


