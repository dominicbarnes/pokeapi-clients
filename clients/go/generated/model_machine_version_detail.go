/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MachineVersionDetail struct for MachineVersionDetail
type MachineVersionDetail struct {
	Machine APIResource `json:"machine"`
	VersionGroup APIResource `json:"version_group"`
}

// NewMachineVersionDetail instantiates a new MachineVersionDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMachineVersionDetail(machine APIResource, versionGroup APIResource) *MachineVersionDetail {
	this := MachineVersionDetail{}
	this.Machine = machine
	this.VersionGroup = versionGroup
	return &this
}

// NewMachineVersionDetailWithDefaults instantiates a new MachineVersionDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMachineVersionDetailWithDefaults() *MachineVersionDetail {
	this := MachineVersionDetail{}
	return &this
}

// GetMachine returns the Machine field value
func (o *MachineVersionDetail) GetMachine() APIResource {
	if o == nil {
		var ret APIResource
		return ret
	}

	return o.Machine
}

// GetMachineOk returns a tuple with the Machine field value
// and a boolean to check if the value has been set.
func (o *MachineVersionDetail) GetMachineOk() (APIResource, bool) {
	if o == nil {
    return APIResource{}, false
	}
	return o.Machine, true
}

// SetMachine sets field value
func (o *MachineVersionDetail) SetMachine(v APIResource) {
	o.Machine = v
}

// GetVersionGroup returns the VersionGroup field value
func (o *MachineVersionDetail) GetVersionGroup() APIResource {
	if o == nil {
		var ret APIResource
		return ret
	}

	return o.VersionGroup
}

// GetVersionGroupOk returns a tuple with the VersionGroup field value
// and a boolean to check if the value has been set.
func (o *MachineVersionDetail) GetVersionGroupOk() (APIResource, bool) {
	if o == nil {
    return APIResource{}, false
	}
	return o.VersionGroup, true
}

// SetVersionGroup sets field value
func (o *MachineVersionDetail) SetVersionGroup(v APIResource) {
	o.VersionGroup = v
}

func (o MachineVersionDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["machine"] = o.Machine
	}
	if true {
		toSerialize["version_group"] = o.VersionGroup
	}
	return json.Marshal(toSerialize)
}

type NullableMachineVersionDetail struct {
	value *MachineVersionDetail
	isSet bool
}

func (v NullableMachineVersionDetail) Get() *MachineVersionDetail {
	return v.value
}

func (v *NullableMachineVersionDetail) Set(val *MachineVersionDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableMachineVersionDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableMachineVersionDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMachineVersionDetail(val *MachineVersionDetail) *NullableMachineVersionDetail {
	return &NullableMachineVersionDetail{value: val, isSet: true}
}

func (v NullableMachineVersionDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMachineVersionDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


