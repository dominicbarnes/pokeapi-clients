/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MoveBattleStylePreference struct for MoveBattleStylePreference
type MoveBattleStylePreference struct {
	// Chance of using the move, in percent, if HP is under one half of maximum HP.
	LowHpPreference int32 `json:"low_hp_preference"`
	// Chance of using the move, in percent, if HP is over one half of maximum HP.
	HighHpPreference int32 `json:"high_hp_preference"`
	MoveBattleStyle NamedAPIResource `json:"move_battle_style"`
}

// NewMoveBattleStylePreference instantiates a new MoveBattleStylePreference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoveBattleStylePreference(lowHpPreference int32, highHpPreference int32, moveBattleStyle NamedAPIResource) *MoveBattleStylePreference {
	this := MoveBattleStylePreference{}
	this.LowHpPreference = lowHpPreference
	this.HighHpPreference = highHpPreference
	this.MoveBattleStyle = moveBattleStyle
	return &this
}

// NewMoveBattleStylePreferenceWithDefaults instantiates a new MoveBattleStylePreference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoveBattleStylePreferenceWithDefaults() *MoveBattleStylePreference {
	this := MoveBattleStylePreference{}
	return &this
}

// GetLowHpPreference returns the LowHpPreference field value
func (o *MoveBattleStylePreference) GetLowHpPreference() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LowHpPreference
}

// GetLowHpPreferenceOk returns a tuple with the LowHpPreference field value
// and a boolean to check if the value has been set.
func (o *MoveBattleStylePreference) GetLowHpPreferenceOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LowHpPreference, true
}

// SetLowHpPreference sets field value
func (o *MoveBattleStylePreference) SetLowHpPreference(v int32) {
	o.LowHpPreference = v
}

// GetHighHpPreference returns the HighHpPreference field value
func (o *MoveBattleStylePreference) GetHighHpPreference() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HighHpPreference
}

// GetHighHpPreferenceOk returns a tuple with the HighHpPreference field value
// and a boolean to check if the value has been set.
func (o *MoveBattleStylePreference) GetHighHpPreferenceOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.HighHpPreference, true
}

// SetHighHpPreference sets field value
func (o *MoveBattleStylePreference) SetHighHpPreference(v int32) {
	o.HighHpPreference = v
}

// GetMoveBattleStyle returns the MoveBattleStyle field value
func (o *MoveBattleStylePreference) GetMoveBattleStyle() NamedAPIResource {
	if o == nil {
		var ret NamedAPIResource
		return ret
	}

	return o.MoveBattleStyle
}

// GetMoveBattleStyleOk returns a tuple with the MoveBattleStyle field value
// and a boolean to check if the value has been set.
func (o *MoveBattleStylePreference) GetMoveBattleStyleOk() (*NamedAPIResource, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MoveBattleStyle, true
}

// SetMoveBattleStyle sets field value
func (o *MoveBattleStylePreference) SetMoveBattleStyle(v NamedAPIResource) {
	o.MoveBattleStyle = v
}

func (o MoveBattleStylePreference) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["low_hp_preference"] = o.LowHpPreference
	}
	if true {
		toSerialize["high_hp_preference"] = o.HighHpPreference
	}
	if true {
		toSerialize["move_battle_style"] = o.MoveBattleStyle
	}
	return json.Marshal(toSerialize)
}

type NullableMoveBattleStylePreference struct {
	value *MoveBattleStylePreference
	isSet bool
}

func (v NullableMoveBattleStylePreference) Get() *MoveBattleStylePreference {
	return v.value
}

func (v *NullableMoveBattleStylePreference) Set(val *MoveBattleStylePreference) {
	v.value = val
	v.isSet = true
}

func (v NullableMoveBattleStylePreference) IsSet() bool {
	return v.isSet
}

func (v *NullableMoveBattleStylePreference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoveBattleStylePreference(val *MoveBattleStylePreference) *NullableMoveBattleStylePreference {
	return &NullableMoveBattleStylePreference{value: val, isSet: true}
}

func (v NullableMoveBattleStylePreference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoveBattleStylePreference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


