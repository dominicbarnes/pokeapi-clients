/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MoveLearnMethod Methods by which Pok√©mon can learn moves.
type MoveLearnMethod struct {
	// The identifier for this move learn method resource.
	Id int32 `json:"id"`
	// The name for this move learn method resource.
	Name string `json:"name"`
	// The description of this move learn method listed in different languages.
	Descriptions []Description `json:"descriptions,omitempty"`
	// The name of this move learn method listed in different languages.
	Names []Name `json:"names,omitempty"`
}

// NewMoveLearnMethod instantiates a new MoveLearnMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoveLearnMethod(id int32, name string) *MoveLearnMethod {
	this := MoveLearnMethod{}
	this.Id = id
	this.Name = name
	return &this
}

// NewMoveLearnMethodWithDefaults instantiates a new MoveLearnMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoveLearnMethodWithDefaults() *MoveLearnMethod {
	this := MoveLearnMethod{}
	return &this
}

// GetId returns the Id field value
func (o *MoveLearnMethod) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MoveLearnMethod) GetIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MoveLearnMethod) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *MoveLearnMethod) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MoveLearnMethod) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MoveLearnMethod) SetName(v string) {
	o.Name = v
}

// GetDescriptions returns the Descriptions field value if set, zero value otherwise.
func (o *MoveLearnMethod) GetDescriptions() []Description {
	if o == nil || isNil(o.Descriptions) {
		var ret []Description
		return ret
	}
	return o.Descriptions
}

// GetDescriptionsOk returns a tuple with the Descriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveLearnMethod) GetDescriptionsOk() ([]Description, bool) {
	if o == nil || isNil(o.Descriptions) {
    return nil, false
	}
	return o.Descriptions, true
}

// HasDescriptions returns a boolean if a field has been set.
func (o *MoveLearnMethod) HasDescriptions() bool {
	if o != nil && !isNil(o.Descriptions) {
		return true
	}

	return false
}

// SetDescriptions gets a reference to the given []Description and assigns it to the Descriptions field.
func (o *MoveLearnMethod) SetDescriptions(v []Description) {
	o.Descriptions = v
}

// GetNames returns the Names field value if set, zero value otherwise.
func (o *MoveLearnMethod) GetNames() []Name {
	if o == nil || isNil(o.Names) {
		var ret []Name
		return ret
	}
	return o.Names
}

// GetNamesOk returns a tuple with the Names field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveLearnMethod) GetNamesOk() ([]Name, bool) {
	if o == nil || isNil(o.Names) {
    return nil, false
	}
	return o.Names, true
}

// HasNames returns a boolean if a field has been set.
func (o *MoveLearnMethod) HasNames() bool {
	if o != nil && !isNil(o.Names) {
		return true
	}

	return false
}

// SetNames gets a reference to the given []Name and assigns it to the Names field.
func (o *MoveLearnMethod) SetNames(v []Name) {
	o.Names = v
}

func (o MoveLearnMethod) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Descriptions) {
		toSerialize["descriptions"] = o.Descriptions
	}
	if !isNil(o.Names) {
		toSerialize["names"] = o.Names
	}
	return json.Marshal(toSerialize)
}

type NullableMoveLearnMethod struct {
	value *MoveLearnMethod
	isSet bool
}

func (v NullableMoveLearnMethod) Get() *MoveLearnMethod {
	return v.value
}

func (v *NullableMoveLearnMethod) Set(val *MoveLearnMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableMoveLearnMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableMoveLearnMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoveLearnMethod(val *MoveLearnMethod) *NullableMoveLearnMethod {
	return &NullableMoveLearnMethod{value: val, isSet: true}
}

func (v NullableMoveLearnMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoveLearnMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


