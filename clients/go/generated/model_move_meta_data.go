/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MoveMetaData struct for MoveMetaData
type MoveMetaData struct {
	Ailment NamedAPIResource `json:"ailment"`
	Category NamedAPIResource `json:"category"`
	// The minimum number of times this move hits. Null if it always only hits once.
	MinHits NullableInt32 `json:"min_hits,omitempty"`
	// The maximum number of times this move hits. Null if it always only hits once.
	MaxHits NullableInt32 `json:"max_hits,omitempty"`
	// The minimum number of turns this move continues to take effect. Null if it always only lasts one turn.
	MinTurns NullableInt32 `json:"min_turns,omitempty"`
	// The maximum number of turns this move continues to take effect. Null if it always only lasts one turn.
	MaxTurns NullableInt32 `json:"max_turns,omitempty"`
	// The amount of hp gained by the attacking Pokemon when it uses this move.
	Drain NullableInt32 `json:"drain,omitempty"`
	// The amount of hp gained by the target Pokemon when it receives this move.
	Healing NullableInt32 `json:"healing,omitempty"`
	// Critical hit rate bonus.
	CritRate NullableInt32 `json:"crit_rate,omitempty"`
	// The chance of the target being inflicted with the status condition ailment.
	AilmentChance NullableInt32 `json:"ailment_chance,omitempty"`
	// The chance of the target flinching when hit by this move.
	FlinchChance NullableInt32 `json:"flinch_chance,omitempty"`
	// The chance of the attacking Pokemon lowering the target's stat.
	StatChance NullableInt32 `json:"stat_chance,omitempty"`
}

// NewMoveMetaData instantiates a new MoveMetaData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoveMetaData(ailment NamedAPIResource, category NamedAPIResource) *MoveMetaData {
	this := MoveMetaData{}
	this.Ailment = ailment
	this.Category = category
	return &this
}

// NewMoveMetaDataWithDefaults instantiates a new MoveMetaData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoveMetaDataWithDefaults() *MoveMetaData {
	this := MoveMetaData{}
	return &this
}

// GetAilment returns the Ailment field value
func (o *MoveMetaData) GetAilment() NamedAPIResource {
	if o == nil {
		var ret NamedAPIResource
		return ret
	}

	return o.Ailment
}

// GetAilmentOk returns a tuple with the Ailment field value
// and a boolean to check if the value has been set.
func (o *MoveMetaData) GetAilmentOk() (*NamedAPIResource, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Ailment, true
}

// SetAilment sets field value
func (o *MoveMetaData) SetAilment(v NamedAPIResource) {
	o.Ailment = v
}

// GetCategory returns the Category field value
func (o *MoveMetaData) GetCategory() NamedAPIResource {
	if o == nil {
		var ret NamedAPIResource
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *MoveMetaData) GetCategoryOk() (*NamedAPIResource, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *MoveMetaData) SetCategory(v NamedAPIResource) {
	o.Category = v
}

// GetMinHits returns the MinHits field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MoveMetaData) GetMinHits() int32 {
	if o == nil || isNil(o.MinHits.Get()) {
		var ret int32
		return ret
	}
	return *o.MinHits.Get()
}

// GetMinHitsOk returns a tuple with the MinHits field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MoveMetaData) GetMinHitsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.MinHits.Get(), o.MinHits.IsSet()
}

// HasMinHits returns a boolean if a field has been set.
func (o *MoveMetaData) HasMinHits() bool {
	if o != nil && o.MinHits.IsSet() {
		return true
	}

	return false
}

// SetMinHits gets a reference to the given NullableInt32 and assigns it to the MinHits field.
func (o *MoveMetaData) SetMinHits(v int32) {
	o.MinHits.Set(&v)
}
// SetMinHitsNil sets the value for MinHits to be an explicit nil
func (o *MoveMetaData) SetMinHitsNil() {
	o.MinHits.Set(nil)
}

// UnsetMinHits ensures that no value is present for MinHits, not even an explicit nil
func (o *MoveMetaData) UnsetMinHits() {
	o.MinHits.Unset()
}

// GetMaxHits returns the MaxHits field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MoveMetaData) GetMaxHits() int32 {
	if o == nil || isNil(o.MaxHits.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxHits.Get()
}

// GetMaxHitsOk returns a tuple with the MaxHits field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MoveMetaData) GetMaxHitsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.MaxHits.Get(), o.MaxHits.IsSet()
}

// HasMaxHits returns a boolean if a field has been set.
func (o *MoveMetaData) HasMaxHits() bool {
	if o != nil && o.MaxHits.IsSet() {
		return true
	}

	return false
}

// SetMaxHits gets a reference to the given NullableInt32 and assigns it to the MaxHits field.
func (o *MoveMetaData) SetMaxHits(v int32) {
	o.MaxHits.Set(&v)
}
// SetMaxHitsNil sets the value for MaxHits to be an explicit nil
func (o *MoveMetaData) SetMaxHitsNil() {
	o.MaxHits.Set(nil)
}

// UnsetMaxHits ensures that no value is present for MaxHits, not even an explicit nil
func (o *MoveMetaData) UnsetMaxHits() {
	o.MaxHits.Unset()
}

// GetMinTurns returns the MinTurns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MoveMetaData) GetMinTurns() int32 {
	if o == nil || isNil(o.MinTurns.Get()) {
		var ret int32
		return ret
	}
	return *o.MinTurns.Get()
}

// GetMinTurnsOk returns a tuple with the MinTurns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MoveMetaData) GetMinTurnsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.MinTurns.Get(), o.MinTurns.IsSet()
}

// HasMinTurns returns a boolean if a field has been set.
func (o *MoveMetaData) HasMinTurns() bool {
	if o != nil && o.MinTurns.IsSet() {
		return true
	}

	return false
}

// SetMinTurns gets a reference to the given NullableInt32 and assigns it to the MinTurns field.
func (o *MoveMetaData) SetMinTurns(v int32) {
	o.MinTurns.Set(&v)
}
// SetMinTurnsNil sets the value for MinTurns to be an explicit nil
func (o *MoveMetaData) SetMinTurnsNil() {
	o.MinTurns.Set(nil)
}

// UnsetMinTurns ensures that no value is present for MinTurns, not even an explicit nil
func (o *MoveMetaData) UnsetMinTurns() {
	o.MinTurns.Unset()
}

// GetMaxTurns returns the MaxTurns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MoveMetaData) GetMaxTurns() int32 {
	if o == nil || isNil(o.MaxTurns.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxTurns.Get()
}

// GetMaxTurnsOk returns a tuple with the MaxTurns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MoveMetaData) GetMaxTurnsOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.MaxTurns.Get(), o.MaxTurns.IsSet()
}

// HasMaxTurns returns a boolean if a field has been set.
func (o *MoveMetaData) HasMaxTurns() bool {
	if o != nil && o.MaxTurns.IsSet() {
		return true
	}

	return false
}

// SetMaxTurns gets a reference to the given NullableInt32 and assigns it to the MaxTurns field.
func (o *MoveMetaData) SetMaxTurns(v int32) {
	o.MaxTurns.Set(&v)
}
// SetMaxTurnsNil sets the value for MaxTurns to be an explicit nil
func (o *MoveMetaData) SetMaxTurnsNil() {
	o.MaxTurns.Set(nil)
}

// UnsetMaxTurns ensures that no value is present for MaxTurns, not even an explicit nil
func (o *MoveMetaData) UnsetMaxTurns() {
	o.MaxTurns.Unset()
}

// GetDrain returns the Drain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MoveMetaData) GetDrain() int32 {
	if o == nil || isNil(o.Drain.Get()) {
		var ret int32
		return ret
	}
	return *o.Drain.Get()
}

// GetDrainOk returns a tuple with the Drain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MoveMetaData) GetDrainOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.Drain.Get(), o.Drain.IsSet()
}

// HasDrain returns a boolean if a field has been set.
func (o *MoveMetaData) HasDrain() bool {
	if o != nil && o.Drain.IsSet() {
		return true
	}

	return false
}

// SetDrain gets a reference to the given NullableInt32 and assigns it to the Drain field.
func (o *MoveMetaData) SetDrain(v int32) {
	o.Drain.Set(&v)
}
// SetDrainNil sets the value for Drain to be an explicit nil
func (o *MoveMetaData) SetDrainNil() {
	o.Drain.Set(nil)
}

// UnsetDrain ensures that no value is present for Drain, not even an explicit nil
func (o *MoveMetaData) UnsetDrain() {
	o.Drain.Unset()
}

// GetHealing returns the Healing field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MoveMetaData) GetHealing() int32 {
	if o == nil || isNil(o.Healing.Get()) {
		var ret int32
		return ret
	}
	return *o.Healing.Get()
}

// GetHealingOk returns a tuple with the Healing field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MoveMetaData) GetHealingOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.Healing.Get(), o.Healing.IsSet()
}

// HasHealing returns a boolean if a field has been set.
func (o *MoveMetaData) HasHealing() bool {
	if o != nil && o.Healing.IsSet() {
		return true
	}

	return false
}

// SetHealing gets a reference to the given NullableInt32 and assigns it to the Healing field.
func (o *MoveMetaData) SetHealing(v int32) {
	o.Healing.Set(&v)
}
// SetHealingNil sets the value for Healing to be an explicit nil
func (o *MoveMetaData) SetHealingNil() {
	o.Healing.Set(nil)
}

// UnsetHealing ensures that no value is present for Healing, not even an explicit nil
func (o *MoveMetaData) UnsetHealing() {
	o.Healing.Unset()
}

// GetCritRate returns the CritRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MoveMetaData) GetCritRate() int32 {
	if o == nil || isNil(o.CritRate.Get()) {
		var ret int32
		return ret
	}
	return *o.CritRate.Get()
}

// GetCritRateOk returns a tuple with the CritRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MoveMetaData) GetCritRateOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.CritRate.Get(), o.CritRate.IsSet()
}

// HasCritRate returns a boolean if a field has been set.
func (o *MoveMetaData) HasCritRate() bool {
	if o != nil && o.CritRate.IsSet() {
		return true
	}

	return false
}

// SetCritRate gets a reference to the given NullableInt32 and assigns it to the CritRate field.
func (o *MoveMetaData) SetCritRate(v int32) {
	o.CritRate.Set(&v)
}
// SetCritRateNil sets the value for CritRate to be an explicit nil
func (o *MoveMetaData) SetCritRateNil() {
	o.CritRate.Set(nil)
}

// UnsetCritRate ensures that no value is present for CritRate, not even an explicit nil
func (o *MoveMetaData) UnsetCritRate() {
	o.CritRate.Unset()
}

// GetAilmentChance returns the AilmentChance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MoveMetaData) GetAilmentChance() int32 {
	if o == nil || isNil(o.AilmentChance.Get()) {
		var ret int32
		return ret
	}
	return *o.AilmentChance.Get()
}

// GetAilmentChanceOk returns a tuple with the AilmentChance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MoveMetaData) GetAilmentChanceOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.AilmentChance.Get(), o.AilmentChance.IsSet()
}

// HasAilmentChance returns a boolean if a field has been set.
func (o *MoveMetaData) HasAilmentChance() bool {
	if o != nil && o.AilmentChance.IsSet() {
		return true
	}

	return false
}

// SetAilmentChance gets a reference to the given NullableInt32 and assigns it to the AilmentChance field.
func (o *MoveMetaData) SetAilmentChance(v int32) {
	o.AilmentChance.Set(&v)
}
// SetAilmentChanceNil sets the value for AilmentChance to be an explicit nil
func (o *MoveMetaData) SetAilmentChanceNil() {
	o.AilmentChance.Set(nil)
}

// UnsetAilmentChance ensures that no value is present for AilmentChance, not even an explicit nil
func (o *MoveMetaData) UnsetAilmentChance() {
	o.AilmentChance.Unset()
}

// GetFlinchChance returns the FlinchChance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MoveMetaData) GetFlinchChance() int32 {
	if o == nil || isNil(o.FlinchChance.Get()) {
		var ret int32
		return ret
	}
	return *o.FlinchChance.Get()
}

// GetFlinchChanceOk returns a tuple with the FlinchChance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MoveMetaData) GetFlinchChanceOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.FlinchChance.Get(), o.FlinchChance.IsSet()
}

// HasFlinchChance returns a boolean if a field has been set.
func (o *MoveMetaData) HasFlinchChance() bool {
	if o != nil && o.FlinchChance.IsSet() {
		return true
	}

	return false
}

// SetFlinchChance gets a reference to the given NullableInt32 and assigns it to the FlinchChance field.
func (o *MoveMetaData) SetFlinchChance(v int32) {
	o.FlinchChance.Set(&v)
}
// SetFlinchChanceNil sets the value for FlinchChance to be an explicit nil
func (o *MoveMetaData) SetFlinchChanceNil() {
	o.FlinchChance.Set(nil)
}

// UnsetFlinchChance ensures that no value is present for FlinchChance, not even an explicit nil
func (o *MoveMetaData) UnsetFlinchChance() {
	o.FlinchChance.Unset()
}

// GetStatChance returns the StatChance field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MoveMetaData) GetStatChance() int32 {
	if o == nil || isNil(o.StatChance.Get()) {
		var ret int32
		return ret
	}
	return *o.StatChance.Get()
}

// GetStatChanceOk returns a tuple with the StatChance field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MoveMetaData) GetStatChanceOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return o.StatChance.Get(), o.StatChance.IsSet()
}

// HasStatChance returns a boolean if a field has been set.
func (o *MoveMetaData) HasStatChance() bool {
	if o != nil && o.StatChance.IsSet() {
		return true
	}

	return false
}

// SetStatChance gets a reference to the given NullableInt32 and assigns it to the StatChance field.
func (o *MoveMetaData) SetStatChance(v int32) {
	o.StatChance.Set(&v)
}
// SetStatChanceNil sets the value for StatChance to be an explicit nil
func (o *MoveMetaData) SetStatChanceNil() {
	o.StatChance.Set(nil)
}

// UnsetStatChance ensures that no value is present for StatChance, not even an explicit nil
func (o *MoveMetaData) UnsetStatChance() {
	o.StatChance.Unset()
}

func (o MoveMetaData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ailment"] = o.Ailment
	}
	if true {
		toSerialize["category"] = o.Category
	}
	if o.MinHits.IsSet() {
		toSerialize["min_hits"] = o.MinHits.Get()
	}
	if o.MaxHits.IsSet() {
		toSerialize["max_hits"] = o.MaxHits.Get()
	}
	if o.MinTurns.IsSet() {
		toSerialize["min_turns"] = o.MinTurns.Get()
	}
	if o.MaxTurns.IsSet() {
		toSerialize["max_turns"] = o.MaxTurns.Get()
	}
	if o.Drain.IsSet() {
		toSerialize["drain"] = o.Drain.Get()
	}
	if o.Healing.IsSet() {
		toSerialize["healing"] = o.Healing.Get()
	}
	if o.CritRate.IsSet() {
		toSerialize["crit_rate"] = o.CritRate.Get()
	}
	if o.AilmentChance.IsSet() {
		toSerialize["ailment_chance"] = o.AilmentChance.Get()
	}
	if o.FlinchChance.IsSet() {
		toSerialize["flinch_chance"] = o.FlinchChance.Get()
	}
	if o.StatChance.IsSet() {
		toSerialize["stat_chance"] = o.StatChance.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMoveMetaData struct {
	value *MoveMetaData
	isSet bool
}

func (v NullableMoveMetaData) Get() *MoveMetaData {
	return v.value
}

func (v *NullableMoveMetaData) Set(val *MoveMetaData) {
	v.value = val
	v.isSet = true
}

func (v NullableMoveMetaData) IsSet() bool {
	return v.isSet
}

func (v *NullableMoveMetaData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoveMetaData(val *MoveMetaData) *NullableMoveMetaData {
	return &NullableMoveMetaData{value: val, isSet: true}
}

func (v NullableMoveMetaData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoveMetaData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


