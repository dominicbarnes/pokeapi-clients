/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PastMoveStatValuesEffectEntriesInner struct for PastMoveStatValuesEffectEntriesInner
type PastMoveStatValuesEffectEntriesInner struct {
	Effect *VerboseEffect `json:"effect,omitempty"`
	VersionGroup *NamedAPIResource `json:"version_group,omitempty"`
}

// NewPastMoveStatValuesEffectEntriesInner instantiates a new PastMoveStatValuesEffectEntriesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPastMoveStatValuesEffectEntriesInner() *PastMoveStatValuesEffectEntriesInner {
	this := PastMoveStatValuesEffectEntriesInner{}
	return &this
}

// NewPastMoveStatValuesEffectEntriesInnerWithDefaults instantiates a new PastMoveStatValuesEffectEntriesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPastMoveStatValuesEffectEntriesInnerWithDefaults() *PastMoveStatValuesEffectEntriesInner {
	this := PastMoveStatValuesEffectEntriesInner{}
	return &this
}

// GetEffect returns the Effect field value if set, zero value otherwise.
func (o *PastMoveStatValuesEffectEntriesInner) GetEffect() VerboseEffect {
	if o == nil || isNil(o.Effect) {
		var ret VerboseEffect
		return ret
	}
	return *o.Effect
}

// GetEffectOk returns a tuple with the Effect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PastMoveStatValuesEffectEntriesInner) GetEffectOk() (*VerboseEffect, bool) {
	if o == nil || isNil(o.Effect) {
    return nil, false
	}
	return o.Effect, true
}

// HasEffect returns a boolean if a field has been set.
func (o *PastMoveStatValuesEffectEntriesInner) HasEffect() bool {
	if o != nil && !isNil(o.Effect) {
		return true
	}

	return false
}

// SetEffect gets a reference to the given VerboseEffect and assigns it to the Effect field.
func (o *PastMoveStatValuesEffectEntriesInner) SetEffect(v VerboseEffect) {
	o.Effect = &v
}

// GetVersionGroup returns the VersionGroup field value if set, zero value otherwise.
func (o *PastMoveStatValuesEffectEntriesInner) GetVersionGroup() NamedAPIResource {
	if o == nil || isNil(o.VersionGroup) {
		var ret NamedAPIResource
		return ret
	}
	return *o.VersionGroup
}

// GetVersionGroupOk returns a tuple with the VersionGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PastMoveStatValuesEffectEntriesInner) GetVersionGroupOk() (*NamedAPIResource, bool) {
	if o == nil || isNil(o.VersionGroup) {
    return nil, false
	}
	return o.VersionGroup, true
}

// HasVersionGroup returns a boolean if a field has been set.
func (o *PastMoveStatValuesEffectEntriesInner) HasVersionGroup() bool {
	if o != nil && !isNil(o.VersionGroup) {
		return true
	}

	return false
}

// SetVersionGroup gets a reference to the given NamedAPIResource and assigns it to the VersionGroup field.
func (o *PastMoveStatValuesEffectEntriesInner) SetVersionGroup(v NamedAPIResource) {
	o.VersionGroup = &v
}

func (o PastMoveStatValuesEffectEntriesInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Effect) {
		toSerialize["effect"] = o.Effect
	}
	if !isNil(o.VersionGroup) {
		toSerialize["version_group"] = o.VersionGroup
	}
	return json.Marshal(toSerialize)
}

type NullablePastMoveStatValuesEffectEntriesInner struct {
	value *PastMoveStatValuesEffectEntriesInner
	isSet bool
}

func (v NullablePastMoveStatValuesEffectEntriesInner) Get() *PastMoveStatValuesEffectEntriesInner {
	return v.value
}

func (v *NullablePastMoveStatValuesEffectEntriesInner) Set(val *PastMoveStatValuesEffectEntriesInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePastMoveStatValuesEffectEntriesInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePastMoveStatValuesEffectEntriesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePastMoveStatValuesEffectEntriesInner(val *PastMoveStatValuesEffectEntriesInner) *NullablePastMoveStatValuesEffectEntriesInner {
	return &NullablePastMoveStatValuesEffectEntriesInner{value: val, isSet: true}
}

func (v NullablePastMoveStatValuesEffectEntriesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePastMoveStatValuesEffectEntriesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


