/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Pokedex struct for Pokedex
type Pokedex struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
	IsMainSeries bool `json:"is_main_series"`
	Descriptions []Description `json:"descriptions"`
	PokemonEntries []PokemonEntry `json:"pokemon_entries"`
	Region NamedAPIResource `json:"region"`
}

// NewPokedex instantiates a new Pokedex object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPokedex(id int32, name string, isMainSeries bool, descriptions []Description, pokemonEntries []PokemonEntry, region NamedAPIResource) *Pokedex {
	this := Pokedex{}
	this.Id = id
	this.Name = name
	this.IsMainSeries = isMainSeries
	this.Descriptions = descriptions
	this.PokemonEntries = pokemonEntries
	this.Region = region
	return &this
}

// NewPokedexWithDefaults instantiates a new Pokedex object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPokedexWithDefaults() *Pokedex {
	this := Pokedex{}
	return &this
}

// GetId returns the Id field value
func (o *Pokedex) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Pokedex) GetIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Pokedex) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *Pokedex) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Pokedex) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Pokedex) SetName(v string) {
	o.Name = v
}

// GetIsMainSeries returns the IsMainSeries field value
func (o *Pokedex) GetIsMainSeries() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsMainSeries
}

// GetIsMainSeriesOk returns a tuple with the IsMainSeries field value
// and a boolean to check if the value has been set.
func (o *Pokedex) GetIsMainSeriesOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsMainSeries, true
}

// SetIsMainSeries sets field value
func (o *Pokedex) SetIsMainSeries(v bool) {
	o.IsMainSeries = v
}

// GetDescriptions returns the Descriptions field value
func (o *Pokedex) GetDescriptions() []Description {
	if o == nil {
		var ret []Description
		return ret
	}

	return o.Descriptions
}

// GetDescriptionsOk returns a tuple with the Descriptions field value
// and a boolean to check if the value has been set.
func (o *Pokedex) GetDescriptionsOk() ([]Description, bool) {
	if o == nil {
    return nil, false
	}
	return o.Descriptions, true
}

// SetDescriptions sets field value
func (o *Pokedex) SetDescriptions(v []Description) {
	o.Descriptions = v
}

// GetPokemonEntries returns the PokemonEntries field value
func (o *Pokedex) GetPokemonEntries() []PokemonEntry {
	if o == nil {
		var ret []PokemonEntry
		return ret
	}

	return o.PokemonEntries
}

// GetPokemonEntriesOk returns a tuple with the PokemonEntries field value
// and a boolean to check if the value has been set.
func (o *Pokedex) GetPokemonEntriesOk() ([]PokemonEntry, bool) {
	if o == nil {
    return nil, false
	}
	return o.PokemonEntries, true
}

// SetPokemonEntries sets field value
func (o *Pokedex) SetPokemonEntries(v []PokemonEntry) {
	o.PokemonEntries = v
}

// GetRegion returns the Region field value
func (o *Pokedex) GetRegion() NamedAPIResource {
	if o == nil {
		var ret NamedAPIResource
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *Pokedex) GetRegionOk() (*NamedAPIResource, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *Pokedex) SetRegion(v NamedAPIResource) {
	o.Region = v
}

func (o Pokedex) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["is_main_series"] = o.IsMainSeries
	}
	if true {
		toSerialize["descriptions"] = o.Descriptions
	}
	if true {
		toSerialize["pokemon_entries"] = o.PokemonEntries
	}
	if true {
		toSerialize["region"] = o.Region
	}
	return json.Marshal(toSerialize)
}

type NullablePokedex struct {
	value *Pokedex
	isSet bool
}

func (v NullablePokedex) Get() *Pokedex {
	return v.value
}

func (v *NullablePokedex) Set(val *Pokedex) {
	v.value = val
	v.isSet = true
}

func (v NullablePokedex) IsSet() bool {
	return v.isSet
}

func (v *NullablePokedex) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePokedex(val *Pokedex) *NullablePokedex {
	return &NullablePokedex{value: val, isSet: true}
}

func (v NullablePokedex) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePokedex) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


