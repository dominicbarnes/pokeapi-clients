/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Pokemon struct for Pokemon
type Pokemon struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
	BaseExperience int32 `json:"base_experience"`
	Height int32 `json:"height"`
	IsDefault bool `json:"is_default"`
	Order int32 `json:"order"`
	Weight int32 `json:"weight"`
	Abilities []PokemonAbility `json:"abilities"`
	Forms []PokemonForm `json:"forms"`
	GameIndices []VersionGameIndex `json:"game_indices"`
	HeldItems []PokemonHeldItem `json:"held_items"`
	LocationAreaEncounters string `json:"location_area_encounters"`
	Moves []PokemonMove `json:"moves"`
	Sprites PokemonSprites `json:"sprites"`
	Species NamedAPIResource `json:"species"`
	Stats []PokemonStat `json:"stats"`
	Types []PokemonType `json:"types"`
}

// NewPokemon instantiates a new Pokemon object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPokemon(id int32, name string, baseExperience int32, height int32, isDefault bool, order int32, weight int32, abilities []PokemonAbility, forms []PokemonForm, gameIndices []VersionGameIndex, heldItems []PokemonHeldItem, locationAreaEncounters string, moves []PokemonMove, sprites PokemonSprites, species NamedAPIResource, stats []PokemonStat, types []PokemonType) *Pokemon {
	this := Pokemon{}
	this.Id = id
	this.Name = name
	this.BaseExperience = baseExperience
	this.Height = height
	this.IsDefault = isDefault
	this.Order = order
	this.Weight = weight
	this.Abilities = abilities
	this.Forms = forms
	this.GameIndices = gameIndices
	this.HeldItems = heldItems
	this.LocationAreaEncounters = locationAreaEncounters
	this.Moves = moves
	this.Sprites = sprites
	this.Species = species
	this.Stats = stats
	this.Types = types
	return &this
}

// NewPokemonWithDefaults instantiates a new Pokemon object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPokemonWithDefaults() *Pokemon {
	this := Pokemon{}
	return &this
}

// GetId returns the Id field value
func (o *Pokemon) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Pokemon) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *Pokemon) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Pokemon) SetName(v string) {
	o.Name = v
}

// GetBaseExperience returns the BaseExperience field value
func (o *Pokemon) GetBaseExperience() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BaseExperience
}

// GetBaseExperienceOk returns a tuple with the BaseExperience field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetBaseExperienceOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.BaseExperience, true
}

// SetBaseExperience sets field value
func (o *Pokemon) SetBaseExperience(v int32) {
	o.BaseExperience = v
}

// GetHeight returns the Height field value
func (o *Pokemon) GetHeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetHeightOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *Pokemon) SetHeight(v int32) {
	o.Height = v
}

// GetIsDefault returns the IsDefault field value
func (o *Pokemon) GetIsDefault() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetIsDefaultOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IsDefault, true
}

// SetIsDefault sets field value
func (o *Pokemon) SetIsDefault(v bool) {
	o.IsDefault = v
}

// GetOrder returns the Order field value
func (o *Pokemon) GetOrder() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Order
}

// GetOrderOk returns a tuple with the Order field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetOrderOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Order, true
}

// SetOrder sets field value
func (o *Pokemon) SetOrder(v int32) {
	o.Order = v
}

// GetWeight returns the Weight field value
func (o *Pokemon) GetWeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Weight
}

// GetWeightOk returns a tuple with the Weight field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetWeightOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Weight, true
}

// SetWeight sets field value
func (o *Pokemon) SetWeight(v int32) {
	o.Weight = v
}

// GetAbilities returns the Abilities field value
func (o *Pokemon) GetAbilities() []PokemonAbility {
	if o == nil {
		var ret []PokemonAbility
		return ret
	}

	return o.Abilities
}

// GetAbilitiesOk returns a tuple with the Abilities field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetAbilitiesOk() ([]PokemonAbility, bool) {
	if o == nil {
    return nil, false
	}
	return o.Abilities, true
}

// SetAbilities sets field value
func (o *Pokemon) SetAbilities(v []PokemonAbility) {
	o.Abilities = v
}

// GetForms returns the Forms field value
func (o *Pokemon) GetForms() []PokemonForm {
	if o == nil {
		var ret []PokemonForm
		return ret
	}

	return o.Forms
}

// GetFormsOk returns a tuple with the Forms field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetFormsOk() ([]PokemonForm, bool) {
	if o == nil {
    return nil, false
	}
	return o.Forms, true
}

// SetForms sets field value
func (o *Pokemon) SetForms(v []PokemonForm) {
	o.Forms = v
}

// GetGameIndices returns the GameIndices field value
func (o *Pokemon) GetGameIndices() []VersionGameIndex {
	if o == nil {
		var ret []VersionGameIndex
		return ret
	}

	return o.GameIndices
}

// GetGameIndicesOk returns a tuple with the GameIndices field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetGameIndicesOk() ([]VersionGameIndex, bool) {
	if o == nil {
    return nil, false
	}
	return o.GameIndices, true
}

// SetGameIndices sets field value
func (o *Pokemon) SetGameIndices(v []VersionGameIndex) {
	o.GameIndices = v
}

// GetHeldItems returns the HeldItems field value
func (o *Pokemon) GetHeldItems() []PokemonHeldItem {
	if o == nil {
		var ret []PokemonHeldItem
		return ret
	}

	return o.HeldItems
}

// GetHeldItemsOk returns a tuple with the HeldItems field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetHeldItemsOk() ([]PokemonHeldItem, bool) {
	if o == nil {
    return nil, false
	}
	return o.HeldItems, true
}

// SetHeldItems sets field value
func (o *Pokemon) SetHeldItems(v []PokemonHeldItem) {
	o.HeldItems = v
}

// GetLocationAreaEncounters returns the LocationAreaEncounters field value
func (o *Pokemon) GetLocationAreaEncounters() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LocationAreaEncounters
}

// GetLocationAreaEncountersOk returns a tuple with the LocationAreaEncounters field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetLocationAreaEncountersOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LocationAreaEncounters, true
}

// SetLocationAreaEncounters sets field value
func (o *Pokemon) SetLocationAreaEncounters(v string) {
	o.LocationAreaEncounters = v
}

// GetMoves returns the Moves field value
func (o *Pokemon) GetMoves() []PokemonMove {
	if o == nil {
		var ret []PokemonMove
		return ret
	}

	return o.Moves
}

// GetMovesOk returns a tuple with the Moves field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetMovesOk() ([]PokemonMove, bool) {
	if o == nil {
    return nil, false
	}
	return o.Moves, true
}

// SetMoves sets field value
func (o *Pokemon) SetMoves(v []PokemonMove) {
	o.Moves = v
}

// GetSprites returns the Sprites field value
func (o *Pokemon) GetSprites() PokemonSprites {
	if o == nil {
		var ret PokemonSprites
		return ret
	}

	return o.Sprites
}

// GetSpritesOk returns a tuple with the Sprites field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetSpritesOk() (*PokemonSprites, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Sprites, true
}

// SetSprites sets field value
func (o *Pokemon) SetSprites(v PokemonSprites) {
	o.Sprites = v
}

// GetSpecies returns the Species field value
func (o *Pokemon) GetSpecies() NamedAPIResource {
	if o == nil {
		var ret NamedAPIResource
		return ret
	}

	return o.Species
}

// GetSpeciesOk returns a tuple with the Species field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetSpeciesOk() (*NamedAPIResource, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Species, true
}

// SetSpecies sets field value
func (o *Pokemon) SetSpecies(v NamedAPIResource) {
	o.Species = v
}

// GetStats returns the Stats field value
func (o *Pokemon) GetStats() []PokemonStat {
	if o == nil {
		var ret []PokemonStat
		return ret
	}

	return o.Stats
}

// GetStatsOk returns a tuple with the Stats field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetStatsOk() ([]PokemonStat, bool) {
	if o == nil {
    return nil, false
	}
	return o.Stats, true
}

// SetStats sets field value
func (o *Pokemon) SetStats(v []PokemonStat) {
	o.Stats = v
}

// GetTypes returns the Types field value
func (o *Pokemon) GetTypes() []PokemonType {
	if o == nil {
		var ret []PokemonType
		return ret
	}

	return o.Types
}

// GetTypesOk returns a tuple with the Types field value
// and a boolean to check if the value has been set.
func (o *Pokemon) GetTypesOk() ([]PokemonType, bool) {
	if o == nil {
    return nil, false
	}
	return o.Types, true
}

// SetTypes sets field value
func (o *Pokemon) SetTypes(v []PokemonType) {
	o.Types = v
}

func (o Pokemon) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["base_experience"] = o.BaseExperience
	}
	if true {
		toSerialize["height"] = o.Height
	}
	if true {
		toSerialize["is_default"] = o.IsDefault
	}
	if true {
		toSerialize["order"] = o.Order
	}
	if true {
		toSerialize["weight"] = o.Weight
	}
	if true {
		toSerialize["abilities"] = o.Abilities
	}
	if true {
		toSerialize["forms"] = o.Forms
	}
	if true {
		toSerialize["game_indices"] = o.GameIndices
	}
	if true {
		toSerialize["held_items"] = o.HeldItems
	}
	if true {
		toSerialize["location_area_encounters"] = o.LocationAreaEncounters
	}
	if true {
		toSerialize["moves"] = o.Moves
	}
	if true {
		toSerialize["sprites"] = o.Sprites
	}
	if true {
		toSerialize["species"] = o.Species
	}
	if true {
		toSerialize["stats"] = o.Stats
	}
	if true {
		toSerialize["types"] = o.Types
	}
	return json.Marshal(toSerialize)
}

type NullablePokemon struct {
	value *Pokemon
	isSet bool
}

func (v NullablePokemon) Get() *Pokemon {
	return v.value
}

func (v *NullablePokemon) Set(val *Pokemon) {
	v.value = val
	v.isSet = true
}

func (v NullablePokemon) IsSet() bool {
	return v.isSet
}

func (v *NullablePokemon) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePokemon(val *Pokemon) *NullablePokemon {
	return &NullablePokemon{value: val, isSet: true}
}

func (v NullablePokemon) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePokemon) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


