/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PokemonEntry struct for PokemonEntry
type PokemonEntry struct {
	// The index number within the Pok√©dex.
	EntryNumber *int32 `json:"entry_number,omitempty"`
	PokemonSpecies *NamedAPIResource `json:"pokemon_species,omitempty"`
}

// NewPokemonEntry instantiates a new PokemonEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPokemonEntry() *PokemonEntry {
	this := PokemonEntry{}
	return &this
}

// NewPokemonEntryWithDefaults instantiates a new PokemonEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPokemonEntryWithDefaults() *PokemonEntry {
	this := PokemonEntry{}
	return &this
}

// GetEntryNumber returns the EntryNumber field value if set, zero value otherwise.
func (o *PokemonEntry) GetEntryNumber() int32 {
	if o == nil || isNil(o.EntryNumber) {
		var ret int32
		return ret
	}
	return *o.EntryNumber
}

// GetEntryNumberOk returns a tuple with the EntryNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PokemonEntry) GetEntryNumberOk() (*int32, bool) {
	if o == nil || isNil(o.EntryNumber) {
    return nil, false
	}
	return o.EntryNumber, true
}

// HasEntryNumber returns a boolean if a field has been set.
func (o *PokemonEntry) HasEntryNumber() bool {
	if o != nil && !isNil(o.EntryNumber) {
		return true
	}

	return false
}

// SetEntryNumber gets a reference to the given int32 and assigns it to the EntryNumber field.
func (o *PokemonEntry) SetEntryNumber(v int32) {
	o.EntryNumber = &v
}

// GetPokemonSpecies returns the PokemonSpecies field value if set, zero value otherwise.
func (o *PokemonEntry) GetPokemonSpecies() NamedAPIResource {
	if o == nil || isNil(o.PokemonSpecies) {
		var ret NamedAPIResource
		return ret
	}
	return *o.PokemonSpecies
}

// GetPokemonSpeciesOk returns a tuple with the PokemonSpecies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PokemonEntry) GetPokemonSpeciesOk() (*NamedAPIResource, bool) {
	if o == nil || isNil(o.PokemonSpecies) {
    return nil, false
	}
	return o.PokemonSpecies, true
}

// HasPokemonSpecies returns a boolean if a field has been set.
func (o *PokemonEntry) HasPokemonSpecies() bool {
	if o != nil && !isNil(o.PokemonSpecies) {
		return true
	}

	return false
}

// SetPokemonSpecies gets a reference to the given NamedAPIResource and assigns it to the PokemonSpecies field.
func (o *PokemonEntry) SetPokemonSpecies(v NamedAPIResource) {
	o.PokemonSpecies = &v
}

func (o PokemonEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EntryNumber) {
		toSerialize["entry_number"] = o.EntryNumber
	}
	if !isNil(o.PokemonSpecies) {
		toSerialize["pokemon_species"] = o.PokemonSpecies
	}
	return json.Marshal(toSerialize)
}

type NullablePokemonEntry struct {
	value *PokemonEntry
	isSet bool
}

func (v NullablePokemonEntry) Get() *PokemonEntry {
	return v.value
}

func (v *NullablePokemonEntry) Set(val *PokemonEntry) {
	v.value = val
	v.isSet = true
}

func (v NullablePokemonEntry) IsSet() bool {
	return v.isSet
}

func (v *NullablePokemonEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePokemonEntry(val *PokemonEntry) *NullablePokemonEntry {
	return &NullablePokemonEntry{value: val, isSet: true}
}

func (v NullablePokemonEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePokemonEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


