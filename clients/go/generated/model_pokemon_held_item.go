/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PokemonHeldItem struct for PokemonHeldItem
type PokemonHeldItem struct {
	Item *Item `json:"item,omitempty"`
	VersionDetails []PokemonHeldItemVersionDetailsInner `json:"version_details,omitempty"`
}

// NewPokemonHeldItem instantiates a new PokemonHeldItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPokemonHeldItem() *PokemonHeldItem {
	this := PokemonHeldItem{}
	return &this
}

// NewPokemonHeldItemWithDefaults instantiates a new PokemonHeldItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPokemonHeldItemWithDefaults() *PokemonHeldItem {
	this := PokemonHeldItem{}
	return &this
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *PokemonHeldItem) GetItem() Item {
	if o == nil || isNil(o.Item) {
		var ret Item
		return ret
	}
	return *o.Item
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PokemonHeldItem) GetItemOk() (*Item, bool) {
	if o == nil || isNil(o.Item) {
    return nil, false
	}
	return o.Item, true
}

// HasItem returns a boolean if a field has been set.
func (o *PokemonHeldItem) HasItem() bool {
	if o != nil && !isNil(o.Item) {
		return true
	}

	return false
}

// SetItem gets a reference to the given Item and assigns it to the Item field.
func (o *PokemonHeldItem) SetItem(v Item) {
	o.Item = &v
}

// GetVersionDetails returns the VersionDetails field value if set, zero value otherwise.
func (o *PokemonHeldItem) GetVersionDetails() []PokemonHeldItemVersionDetailsInner {
	if o == nil || isNil(o.VersionDetails) {
		var ret []PokemonHeldItemVersionDetailsInner
		return ret
	}
	return o.VersionDetails
}

// GetVersionDetailsOk returns a tuple with the VersionDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PokemonHeldItem) GetVersionDetailsOk() ([]PokemonHeldItemVersionDetailsInner, bool) {
	if o == nil || isNil(o.VersionDetails) {
    return nil, false
	}
	return o.VersionDetails, true
}

// HasVersionDetails returns a boolean if a field has been set.
func (o *PokemonHeldItem) HasVersionDetails() bool {
	if o != nil && !isNil(o.VersionDetails) {
		return true
	}

	return false
}

// SetVersionDetails gets a reference to the given []PokemonHeldItemVersionDetailsInner and assigns it to the VersionDetails field.
func (o *PokemonHeldItem) SetVersionDetails(v []PokemonHeldItemVersionDetailsInner) {
	o.VersionDetails = v
}

func (o PokemonHeldItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Item) {
		toSerialize["item"] = o.Item
	}
	if !isNil(o.VersionDetails) {
		toSerialize["version_details"] = o.VersionDetails
	}
	return json.Marshal(toSerialize)
}

type NullablePokemonHeldItem struct {
	value *PokemonHeldItem
	isSet bool
}

func (v NullablePokemonHeldItem) Get() *PokemonHeldItem {
	return v.value
}

func (v *NullablePokemonHeldItem) Set(val *PokemonHeldItem) {
	v.value = val
	v.isSet = true
}

func (v NullablePokemonHeldItem) IsSet() bool {
	return v.isSet
}

func (v *NullablePokemonHeldItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePokemonHeldItem(val *PokemonHeldItem) *NullablePokemonHeldItem {
	return &NullablePokemonHeldItem{value: val, isSet: true}
}

func (v NullablePokemonHeldItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePokemonHeldItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


