/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PokemonHeldItemVersionDetailsInner struct for PokemonHeldItemVersionDetailsInner
type PokemonHeldItemVersionDetailsInner struct {
	Rarity *int32 `json:"rarity,omitempty"`
	Version *Version `json:"version,omitempty"`
}

// NewPokemonHeldItemVersionDetailsInner instantiates a new PokemonHeldItemVersionDetailsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPokemonHeldItemVersionDetailsInner() *PokemonHeldItemVersionDetailsInner {
	this := PokemonHeldItemVersionDetailsInner{}
	return &this
}

// NewPokemonHeldItemVersionDetailsInnerWithDefaults instantiates a new PokemonHeldItemVersionDetailsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPokemonHeldItemVersionDetailsInnerWithDefaults() *PokemonHeldItemVersionDetailsInner {
	this := PokemonHeldItemVersionDetailsInner{}
	return &this
}

// GetRarity returns the Rarity field value if set, zero value otherwise.
func (o *PokemonHeldItemVersionDetailsInner) GetRarity() int32 {
	if o == nil || isNil(o.Rarity) {
		var ret int32
		return ret
	}
	return *o.Rarity
}

// GetRarityOk returns a tuple with the Rarity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PokemonHeldItemVersionDetailsInner) GetRarityOk() (*int32, bool) {
	if o == nil || isNil(o.Rarity) {
    return nil, false
	}
	return o.Rarity, true
}

// HasRarity returns a boolean if a field has been set.
func (o *PokemonHeldItemVersionDetailsInner) HasRarity() bool {
	if o != nil && !isNil(o.Rarity) {
		return true
	}

	return false
}

// SetRarity gets a reference to the given int32 and assigns it to the Rarity field.
func (o *PokemonHeldItemVersionDetailsInner) SetRarity(v int32) {
	o.Rarity = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *PokemonHeldItemVersionDetailsInner) GetVersion() Version {
	if o == nil || isNil(o.Version) {
		var ret Version
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PokemonHeldItemVersionDetailsInner) GetVersionOk() (*Version, bool) {
	if o == nil || isNil(o.Version) {
    return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *PokemonHeldItemVersionDetailsInner) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given Version and assigns it to the Version field.
func (o *PokemonHeldItemVersionDetailsInner) SetVersion(v Version) {
	o.Version = &v
}

func (o PokemonHeldItemVersionDetailsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Rarity) {
		toSerialize["rarity"] = o.Rarity
	}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullablePokemonHeldItemVersionDetailsInner struct {
	value *PokemonHeldItemVersionDetailsInner
	isSet bool
}

func (v NullablePokemonHeldItemVersionDetailsInner) Get() *PokemonHeldItemVersionDetailsInner {
	return v.value
}

func (v *NullablePokemonHeldItemVersionDetailsInner) Set(val *PokemonHeldItemVersionDetailsInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePokemonHeldItemVersionDetailsInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePokemonHeldItemVersionDetailsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePokemonHeldItemVersionDetailsInner(val *PokemonHeldItemVersionDetailsInner) *NullablePokemonHeldItemVersionDetailsInner {
	return &NullablePokemonHeldItemVersionDetailsInner{value: val, isSet: true}
}

func (v NullablePokemonHeldItemVersionDetailsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePokemonHeldItemVersionDetailsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


