/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TypeGameIndicesInner struct for TypeGameIndicesInner
type TypeGameIndicesInner struct {
	// The internal id of an api resource within game data.
	GameIndex *int32 `json:"game_index,omitempty"`
	Generation *TypeGameIndicesInnerGeneration `json:"generation,omitempty"`
}

// NewTypeGameIndicesInner instantiates a new TypeGameIndicesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypeGameIndicesInner() *TypeGameIndicesInner {
	this := TypeGameIndicesInner{}
	return &this
}

// NewTypeGameIndicesInnerWithDefaults instantiates a new TypeGameIndicesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypeGameIndicesInnerWithDefaults() *TypeGameIndicesInner {
	this := TypeGameIndicesInner{}
	return &this
}

// GetGameIndex returns the GameIndex field value if set, zero value otherwise.
func (o *TypeGameIndicesInner) GetGameIndex() int32 {
	if o == nil || isNil(o.GameIndex) {
		var ret int32
		return ret
	}
	return *o.GameIndex
}

// GetGameIndexOk returns a tuple with the GameIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeGameIndicesInner) GetGameIndexOk() (*int32, bool) {
	if o == nil || isNil(o.GameIndex) {
    return nil, false
	}
	return o.GameIndex, true
}

// HasGameIndex returns a boolean if a field has been set.
func (o *TypeGameIndicesInner) HasGameIndex() bool {
	if o != nil && !isNil(o.GameIndex) {
		return true
	}

	return false
}

// SetGameIndex gets a reference to the given int32 and assigns it to the GameIndex field.
func (o *TypeGameIndicesInner) SetGameIndex(v int32) {
	o.GameIndex = &v
}

// GetGeneration returns the Generation field value if set, zero value otherwise.
func (o *TypeGameIndicesInner) GetGeneration() TypeGameIndicesInnerGeneration {
	if o == nil || isNil(o.Generation) {
		var ret TypeGameIndicesInnerGeneration
		return ret
	}
	return *o.Generation
}

// GetGenerationOk returns a tuple with the Generation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeGameIndicesInner) GetGenerationOk() (*TypeGameIndicesInnerGeneration, bool) {
	if o == nil || isNil(o.Generation) {
    return nil, false
	}
	return o.Generation, true
}

// HasGeneration returns a boolean if a field has been set.
func (o *TypeGameIndicesInner) HasGeneration() bool {
	if o != nil && !isNil(o.Generation) {
		return true
	}

	return false
}

// SetGeneration gets a reference to the given TypeGameIndicesInnerGeneration and assigns it to the Generation field.
func (o *TypeGameIndicesInner) SetGeneration(v TypeGameIndicesInnerGeneration) {
	o.Generation = &v
}

func (o TypeGameIndicesInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.GameIndex) {
		toSerialize["game_index"] = o.GameIndex
	}
	if !isNil(o.Generation) {
		toSerialize["generation"] = o.Generation
	}
	return json.Marshal(toSerialize)
}

type NullableTypeGameIndicesInner struct {
	value *TypeGameIndicesInner
	isSet bool
}

func (v NullableTypeGameIndicesInner) Get() *TypeGameIndicesInner {
	return v.value
}

func (v *NullableTypeGameIndicesInner) Set(val *TypeGameIndicesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTypeGameIndicesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTypeGameIndicesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypeGameIndicesInner(val *TypeGameIndicesInner) *NullableTypeGameIndicesInner {
	return &NullableTypeGameIndicesInner{value: val, isSet: true}
}

func (v NullableTypeGameIndicesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypeGameIndicesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


