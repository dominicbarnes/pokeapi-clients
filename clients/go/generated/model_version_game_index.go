/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VersionGameIndex struct for VersionGameIndex
type VersionGameIndex struct {
	// The internal id of the game used in generation VI and VII to identify different versions of the same Pok√©mon species. 
	GameIndex *int32 `json:"game_index,omitempty"`
	Version *NamedAPIResource `json:"version,omitempty"`
}

// NewVersionGameIndex instantiates a new VersionGameIndex object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVersionGameIndex() *VersionGameIndex {
	this := VersionGameIndex{}
	return &this
}

// NewVersionGameIndexWithDefaults instantiates a new VersionGameIndex object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVersionGameIndexWithDefaults() *VersionGameIndex {
	this := VersionGameIndex{}
	return &this
}

// GetGameIndex returns the GameIndex field value if set, zero value otherwise.
func (o *VersionGameIndex) GetGameIndex() int32 {
	if o == nil || isNil(o.GameIndex) {
		var ret int32
		return ret
	}
	return *o.GameIndex
}

// GetGameIndexOk returns a tuple with the GameIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionGameIndex) GetGameIndexOk() (*int32, bool) {
	if o == nil || isNil(o.GameIndex) {
    return nil, false
	}
	return o.GameIndex, true
}

// HasGameIndex returns a boolean if a field has been set.
func (o *VersionGameIndex) HasGameIndex() bool {
	if o != nil && !isNil(o.GameIndex) {
		return true
	}

	return false
}

// SetGameIndex gets a reference to the given int32 and assigns it to the GameIndex field.
func (o *VersionGameIndex) SetGameIndex(v int32) {
	o.GameIndex = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *VersionGameIndex) GetVersion() NamedAPIResource {
	if o == nil || isNil(o.Version) {
		var ret NamedAPIResource
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionGameIndex) GetVersionOk() (*NamedAPIResource, bool) {
	if o == nil || isNil(o.Version) {
    return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *VersionGameIndex) HasVersion() bool {
	if o != nil && !isNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NamedAPIResource and assigns it to the Version field.
func (o *VersionGameIndex) SetVersion(v NamedAPIResource) {
	o.Version = &v
}

func (o VersionGameIndex) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.GameIndex) {
		toSerialize["game_index"] = o.GameIndex
	}
	if !isNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableVersionGameIndex struct {
	value *VersionGameIndex
	isSet bool
}

func (v NullableVersionGameIndex) Get() *VersionGameIndex {
	return v.value
}

func (v *NullableVersionGameIndex) Set(val *VersionGameIndex) {
	v.value = val
	v.isSet = true
}

func (v NullableVersionGameIndex) IsSet() bool {
	return v.isSet
}

func (v *NullableVersionGameIndex) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVersionGameIndex(val *VersionGameIndex) *NullableVersionGameIndex {
	return &NullableVersionGameIndex{value: val, isSet: true}
}

func (v NullableVersionGameIndex) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVersionGameIndex) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


