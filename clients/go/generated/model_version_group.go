/*


No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 20220523
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VersionGroup struct for VersionGroup
type VersionGroup struct {
	Id int32 `json:"id"`
	Name string `json:"name"`
	Order int32 `json:"order"`
	Generation NamedAPIResource `json:"generation"`
	MoveLearnMethods []NamedAPIResource `json:"move_learn_methods"`
	Pokedexes []NamedAPIResource `json:"pokedexes"`
	Regions []NamedAPIResource `json:"regions"`
	Versions []NamedAPIResource `json:"versions"`
}

// NewVersionGroup instantiates a new VersionGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVersionGroup(id int32, name string, order int32, generation NamedAPIResource, moveLearnMethods []NamedAPIResource, pokedexes []NamedAPIResource, regions []NamedAPIResource, versions []NamedAPIResource) *VersionGroup {
	this := VersionGroup{}
	this.Id = id
	this.Name = name
	this.Order = order
	this.Generation = generation
	this.MoveLearnMethods = moveLearnMethods
	this.Pokedexes = pokedexes
	this.Regions = regions
	this.Versions = versions
	return &this
}

// NewVersionGroupWithDefaults instantiates a new VersionGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVersionGroupWithDefaults() *VersionGroup {
	this := VersionGroup{}
	return &this
}

// GetId returns the Id field value
func (o *VersionGroup) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VersionGroup) GetIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VersionGroup) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *VersionGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VersionGroup) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VersionGroup) SetName(v string) {
	o.Name = v
}

// GetOrder returns the Order field value
func (o *VersionGroup) GetOrder() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Order
}

// GetOrderOk returns a tuple with the Order field value
// and a boolean to check if the value has been set.
func (o *VersionGroup) GetOrderOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Order, true
}

// SetOrder sets field value
func (o *VersionGroup) SetOrder(v int32) {
	o.Order = v
}

// GetGeneration returns the Generation field value
func (o *VersionGroup) GetGeneration() NamedAPIResource {
	if o == nil {
		var ret NamedAPIResource
		return ret
	}

	return o.Generation
}

// GetGenerationOk returns a tuple with the Generation field value
// and a boolean to check if the value has been set.
func (o *VersionGroup) GetGenerationOk() (*NamedAPIResource, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Generation, true
}

// SetGeneration sets field value
func (o *VersionGroup) SetGeneration(v NamedAPIResource) {
	o.Generation = v
}

// GetMoveLearnMethods returns the MoveLearnMethods field value
func (o *VersionGroup) GetMoveLearnMethods() []NamedAPIResource {
	if o == nil {
		var ret []NamedAPIResource
		return ret
	}

	return o.MoveLearnMethods
}

// GetMoveLearnMethodsOk returns a tuple with the MoveLearnMethods field value
// and a boolean to check if the value has been set.
func (o *VersionGroup) GetMoveLearnMethodsOk() ([]NamedAPIResource, bool) {
	if o == nil {
    return nil, false
	}
	return o.MoveLearnMethods, true
}

// SetMoveLearnMethods sets field value
func (o *VersionGroup) SetMoveLearnMethods(v []NamedAPIResource) {
	o.MoveLearnMethods = v
}

// GetPokedexes returns the Pokedexes field value
func (o *VersionGroup) GetPokedexes() []NamedAPIResource {
	if o == nil {
		var ret []NamedAPIResource
		return ret
	}

	return o.Pokedexes
}

// GetPokedexesOk returns a tuple with the Pokedexes field value
// and a boolean to check if the value has been set.
func (o *VersionGroup) GetPokedexesOk() ([]NamedAPIResource, bool) {
	if o == nil {
    return nil, false
	}
	return o.Pokedexes, true
}

// SetPokedexes sets field value
func (o *VersionGroup) SetPokedexes(v []NamedAPIResource) {
	o.Pokedexes = v
}

// GetRegions returns the Regions field value
func (o *VersionGroup) GetRegions() []NamedAPIResource {
	if o == nil {
		var ret []NamedAPIResource
		return ret
	}

	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value
// and a boolean to check if the value has been set.
func (o *VersionGroup) GetRegionsOk() ([]NamedAPIResource, bool) {
	if o == nil {
    return nil, false
	}
	return o.Regions, true
}

// SetRegions sets field value
func (o *VersionGroup) SetRegions(v []NamedAPIResource) {
	o.Regions = v
}

// GetVersions returns the Versions field value
func (o *VersionGroup) GetVersions() []NamedAPIResource {
	if o == nil {
		var ret []NamedAPIResource
		return ret
	}

	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value
// and a boolean to check if the value has been set.
func (o *VersionGroup) GetVersionsOk() ([]NamedAPIResource, bool) {
	if o == nil {
    return nil, false
	}
	return o.Versions, true
}

// SetVersions sets field value
func (o *VersionGroup) SetVersions(v []NamedAPIResource) {
	o.Versions = v
}

func (o VersionGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["order"] = o.Order
	}
	if true {
		toSerialize["generation"] = o.Generation
	}
	if true {
		toSerialize["move_learn_methods"] = o.MoveLearnMethods
	}
	if true {
		toSerialize["pokedexes"] = o.Pokedexes
	}
	if true {
		toSerialize["regions"] = o.Regions
	}
	if true {
		toSerialize["versions"] = o.Versions
	}
	return json.Marshal(toSerialize)
}

type NullableVersionGroup struct {
	value *VersionGroup
	isSet bool
}

func (v NullableVersionGroup) Get() *VersionGroup {
	return v.value
}

func (v *NullableVersionGroup) Set(val *VersionGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableVersionGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableVersionGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVersionGroup(val *VersionGroup) *NullableVersionGroup {
	return &NullableVersionGroup{value: val, isSet: true}
}

func (v NullableVersionGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVersionGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


